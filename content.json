{"posts":[{"title":"你好，世界","text":"欢迎来到 Hexo！这是你的第一篇文章。更多信息请查看 文档。如果在使用 Hexo 时遇到任何问题，你可以在 故障排除 中找到答案，或者在 GitHub 上向我提问。 快速入门创建新文章1$ hexo new &quot;我的新文章&quot; 更多信息：写作 运行服务器1$ hexo server 更多信息：服务器 生成静态文件1$ hexo generate 更多信息：生成 部署到远程站点1$ hexo deploy 更多信息：部署","link":"/uncategorized/%E4%BD%A0%E5%A5%BD%EF%BC%8C%E4%B8%96%E7%95%8C/"},{"title":"Cyberpunk Theme Variant","text":"Icarus 从 3.0.0 版本开始包含一个名为 “赛博朋克” 的新变体。 该主题的灵感来源于 CD PROJEKT RED 开发的电子游戏 《赛博朋克 2077》。 此变体旨在为喜欢暗黑主题博客的用户提供不同的 Icarus 体验。 需要注意的是，它使用了最新的网页样式特性，这些特性在某些旧版浏览器（包括 Internet Explorer 和旧版 Microsoft Edge）中无法正常工作。 要启用赛博朋克主题，请打开 _config.icarus.yml 并进行以下修改： _config.icarus.yml12- variant: default+ variant: cyberpunk 你可能还想更改代码块的高亮主题。 在这种情况下，你可以在 这里 找到一些暗黑系的 highlight.js 主题。 复制文件名（不包含 .css 扩展名），并将其放入 _config.icarus.yml 中的 article.highlight.theme 选项。 例如，如果你想将主题更改为 xt256，请进行以下修改： _config.icarus.yml12345# 文章相关配置article: highlight:- theme: atom-one-light+ theme: xt256 除了调色板之外，Icarus 还使用了两张图像资源，分别放置在顶部导航栏和页面底部页脚，这些资源来自《赛博朋克 2077》官方网站。 如果你希望进一步修改此主题变体，可以查看 &lt;icarus_directory&gt;/source/css/cyberpunk.styl。","link":"/uncategorized/cyberpunk-theme-variant/"},{"title":"Hexo 内置标签指南","text":"以下内容取自 Hexo 文档 并略有修订。 标签插件与文章标签不同。它们从 Octopress 移植而来，为你快速添加特定内容到文章中提供了一种实用方法。 块引用非常适合在文章中添加引用内容，可选择性包含作者、来源和标题信息。 别名： quote 123{% blockquote [author[, source]] [link] [source_link_title] %}内容{% endblockquote %} 示例不带参数。普通块引用。 123{% blockquote %} Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem.{% endblockquote %} Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem. 引用自书籍 123{% blockquote David Levithan, Wide Awake %}不要只为自己寻求幸福。要为所有人寻求幸福。通过仁慈。通过怜悯。{% endblockquote %} 不要只为自己寻求幸福。要为所有人寻求幸福。通过仁慈。通过怜悯。 David LevithanWide Awake 引用自 Twitter 123{% blockquote @DevDocs https://twitter.com/devdocs/status/356095192085962752 %}新功能：DevDocs 现在带有语法高亮功能。http://devdocs.io {% endblockquote %} 新功能：DevDocs 现在带有语法高亮功能。http://devdocs.io @DevDocstwitter.com/devdocs/status/356095192085962752 引用自网页文章 123{% blockquote Seth Godin http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html 欢迎来到 Island Marketing %}每一次互动都弥足珍贵，也是一次愉悦的机会。{% endblockquote %} 每一次互动都弥足珍贵，也是一次愉悦的机会。 Seth Godin欢迎来到 Island Marketing 代码块这是在文章中添加代码片段的实用功能。 别名： code 123{% codeblock [title] [lang:language] [url] [链接文本] [附加选项] %}代码片段{% endcodeblock %} 示例普通代码块 123{% codeblock %} alert('你好，世界！'); {% endcodeblock %} 1alert('你好，世界！'); 指定语言 123{% codeblock lang:objc %}[rectangle setX: 10 y: 10 width: 20 height: 20];{% endcodeblock %} 1[rectangle setX: 10 y: 10 width: 20 height: 20]; 为代码块添加标题 123{% codeblock Array.map %}array.map(callback[, thisArg]) {% endcodeblock %} Array.map1array.map(callback[, thisArg]) 添加标题和 URL 1234{% codeblock _.compact http://underscorejs.org/#compact Underscore.js %}_.compact([0, 1, false, 2, '', 3]); =&gt; [1, 2, 3] {% endcodeblock %} _.compactUnderscore.js12_.compact([0, 1, false, 2, '', 3]); =&gt; [1, 2, 3] 反引号代码块这与使用代码块相同，但使用三个反引号来分隔代码块。 1`` [language] [title] [url] [link text] code snippet `` 拉取引用要在文章中添加拉取引用： 123{% pullquote [class] %}内容{% endpullquote %} iframe嵌入 iframe： 1{% iframe url [宽度] [高度] %} 图片插入指定大小的图片。 1{% img [类名] /path/to/image [宽度] [高度] '&quot;标题文本&quot; &quot;替代文本&quot;' %} 链接插入带有 target=&quot;_blank&quot; 属性的链接。 1{% 链接文本 url [外部] [标题] %} Hexo.io 包含代码插入 source/downloads/code 文件夹中的代码片段。 1{% include_code [标题] [语言：语言] [发件人：行] [收件人：行] 路径/到/文件 %} 示例嵌入 test.js 的全部内容 1{% include_code lang:javascript test.js %} 仅嵌入第 3 行 1{% include_code lang:javascript 从：3 到：3 test.js %} 嵌入第 5 至 8 行 1{% include_code lang:javascript 从：5 到：8 test.js %} 将第 5 行嵌入到文件末尾 1{% include_code lang:javascript 来自:5 test.js %} 嵌入第 1 至 8 行 1{% include_code lang:javascript 到:8 test.js %} 包含文章包含指向其他文章的链接。 12{% post_path 文件名 %} {% post_link 文件名 [标题] [转义] %} 包含资源包含文章资源。 123{% asset_path 文件名 %} {% asset_img [类名] slug [宽度] [高度] [标题文本 [替代文本]] %} {% asset_link 文件名 [标题] [转义] %} 原始内容如果某些内容在文章处理中导致问题，可以使用 raw 标签将其包裹，以避免渲染错误。 123{% raw %}内容{% endraw %} 文章摘要将 &lt;!-- more --&gt; 标签之前的文本用作帖子的摘要。如果在前置事项中指定了 excerpt: 值，则该值优先。 示例: 123Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.&lt;!-- more --&gt;Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.","link":"/uncategorized/hexo-%E5%86%85%E7%BD%AE%E6%A0%87%E7%AD%BE%E6%8C%87%E5%8D%97/"},{"title":"JavaScript 中的引用相等性和值相等性","text":"在 JavaScript 中，理解不同数据类型的比较行为对于编写正确且高效的代码至关重要。本文将探讨 == 运算符如何处理基本类型和引用类型的比较，并通过示例来加深理解。 == 比较运算符== 是 JavaScript 中用于检查两个值是否相等的运算符。它会根据操作数的数据类型执行不同的比较逻辑： 基本类型（如 number, string, boolean）：直接比较它们的值。 引用类型（如 Array, Object, Function 等）：比较的是对象的引用，即它们在内存中的地址。 示例代码分析考虑下面这段代码： 1234567let a = [1, 2, 3];const mySet = new Set([a, 2, 3, 4, 5]);for (let item of mySet) { console.log(item);}console.log(mySet.has([1, 2, 3])); // 返回 false mySet.has([1, 2, 3]) 同样返回 false，因为 has 方法是基于对象引用进行比较的，而新创建的数组 [1, 2, 3] 与 Set 中原有的数组 a 不是指向同一块内存地址。 不同数据类型的比较基本类型对于基本类型，== 比较它们的值： 123console.log(1 == 1); // trueconsole.log('hello' == 'hello'); // trueconsole.log(true == true); // true 引用类型对于引用类型，== 比较的是引用，而不是内容： 1234567let arr1 = [1, 2, 3];let arr2 = [1, 2, 3];console.log(arr1 == arr2); // falselet obj1 = { a: 1 };let obj2 = { a: 1 };console.log(obj1 == obj2); // false 元组（Tuple）JavaScript 使用数组来模拟元组，因此也是基于引用比较： 123let tuple1 = [1, 2, 3];let tuple2 = [1, 2, 3];console.log(tuple1 == tuple2); // false 字典（Dictionary）使用 Object 或 Map 实现的字典同样基于引用比较： 1234567let dict1 = { a: 1, b: 2 };let dict2 = { a: 1, b: 2 };console.log(dict1 == dict2); // falselet map1 = new Map([['a', 1], ['b', 2]]);let map2 = new Map([['a', 1], ['b', 2]]);console.log(map1 == map2); // false 总结 当使用 == 来比较基本类型时，实际上是在比较它们的值。 当使用 == 来比较引用类型时，实际上是在比较它们的引用，而不是它们所包含的内容。 如果需要比较引用类型的值而非引用，可以使用 JSON.stringify() 转换为字符串后再比较，或者实现自定义的深比较函数。","link":"/uncategorized/javascript-%E4%B8%AD%E7%9A%84%E5%BC%95%E7%94%A8%E7%9B%B8%E7%AD%89%E6%80%A7%E5%92%8C%E5%80%BC%E7%9B%B8%E7%AD%89%E6%80%A7/"},{"title":"从 DFS 到动态规划：算法优化思想的演进","text":"在算法设计中，同一个问题往往可以用不同的方法求解。本文将以一个具体的例子，探讨从最基础的深度优先搜索（DFS）到动态规划的演进过程，分析每一步优化背后的思想。 从一个例子开始让我们以经典的”爬楼梯”问题为例：假设你正在爬楼梯，每次可以爬 1 或 2 个台阶，请问爬到第 n 阶有多少种不同的方法？ 方案一：朴素 DFS最直观的解法是使用 DFS，把问题分解为更小的子问题： 1234function climbStairs(n) { if (n &lt;= 1) return 1; return climbStairs(n - 1) + climbStairs(n - 2);} 这种方法的问题在于： 存在大量重复计算 时间复杂度为 O(2^n)，呈指数级增长 当 n 较大时可能导致栈溢出 方案二：记忆化搜索观察发现，DFS 过程中有许多子问题被重复计算。比如计算 f(5) 时，f(3) 会在计算 f(4) 和 f(5) 时各被计算一次。通过存储已计算的结果，我们可以避免重复计算： 12345678function climbStairs(n, memo = new Map()) { if (n &lt;= 1) return 1; if (memo.has(n)) return memo.get(n); const result = climbStairs(n - 1, memo) + climbStairs(n - 2, memo); memo.set(n, result); return result;} 优化效果： 时间复杂度降至 O(n) 空间复杂度为 O(n) 保持了递归的清晰思路 方案三：动态规划记忆化搜索本质上是”自顶向下”的解法。既然我们已经找到了子问题之间的关系，何不直接”自底向上”地构建解答？ 12345678910function climbStairs(n) { const dp = new Array(n + 1); dp[0] = dp[1] = 1; for (let i = 2; i &lt;= n; i++) { dp[i] = dp[i - 1] + dp[i - 2]; } return dp[n];} 这种方法的优势： 避免了递归调用的开销 代码更简洁，执行更高效 便于理解和维护 方案四：空间优化观察发现，在计算过程中，我们每次只需要用到最近的两个状态。因此可以只用两个变量来存储状态，进一步优化空间复杂度： 12345678910function climbStairs(n) { if (n &lt;= 1) return 1; let prev = 1, curr = 1; for (let i = 2; i &lt;= n; i++) { [prev, curr] = [curr, prev + curr]; } return curr;} 优化思想分析这个演进过程展示了几个重要的算法设计思想： 问题分解： DFS 通过递归将问题分解为规模更小的子问题 找到问题的最优子结构是后续优化的基础 避免重复： 记忆化搜索通过存储中间结果避免重复计算 这种”以空间换时间”的思想是算法优化的常用手段 方向转换： 从”自顶向下”到”自底向上”的转变 递推代替递归，往往能带来性能提升 状态压缩： 分析状态转移过程，只保留必要的状态 这种思想在处理大规模数据时特别重要 总结与思考从 DFS 到动态规划的演进，展示了算法优化的一般过程： 先写出最直观的解法 发现并消除重复计算 寻找更优的求解方向 优化空间使用 这个过程不仅适用于本例，也是解决其他算法问题的重要思路。关键是要善于发现问题中的重复计算，并找到优化的突破口。","link":"/uncategorized/%E4%BB%8E-dfs-%E5%88%B0%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%EF%BC%9A%E7%AE%97%E6%B3%95%E4%BC%98%E5%8C%96%E6%80%9D%E6%83%B3%E7%9A%84%E6%BC%94%E8%BF%9B/"},{"title":"代码随想录算法训练营第一天|数组Part01","text":"一、二分查找的前提条件 数组有序 无重复元素 （若存在重复元素，返回的下标可能不唯一） 二、循环不变量原则二分法的核心是保持区间定义的一致性（循环不变量）。常见区间定义有两种： 左闭右闭 [left, right] 循环条件：while (left &lt;= right) 边界处理： 若 nums[mid] &gt; target，则 right = mid - 1（因 mid 已被排除） 若 nums[mid] &lt; target，则 left = mid + 1 左闭右开 [left, right) 循环条件：while (left &lt; right) 边界处理： 若 nums[mid] &gt; target，则 right = mid（right 本身不在区间内） 若 nums[mid] &lt; target，则 left = mid + 1 三、正确代码示例（左闭右闭区间）12345678910111213var search = function(nums, target) { let left = 0, right = nums.length - 1; while (left &lt;= right) { // 闭区间包含 left === right 的情况 const mid = Math.floor((left + right) / 2); if (nums[mid] === target) return mid; if (nums[mid] &gt; target) { right = mid - 1; // 闭区间需排除 mid } else { left = mid + 1; } } return -1;}; 四、关键总结 区间定义决定循环条件与边界处理 闭区间 [left, right] → while (left &lt;= right) 开区间 [left, right) → while (left &lt; right) 避免死循环 确保每次迭代后区间会缩小（如 right = mid - 1 而非 right = mid）。 处理边界值 注意数组长度为 0、1 时的特殊情况。","link":"/%E7%AE%97%E6%B3%95%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95%E7%AE%97%E6%B3%95%E8%AE%AD%E7%BB%83%E8%90%A5%E7%AC%AC%E4%B8%80%E5%A4%A9-%E6%95%B0%E7%BB%84part01/"},{"title":"代码随想录算法训练营第二天|数组Part02","text":"209. 长度最小的子数组给定一个含有 n 个正整数的数组和一个正整数 target 。 找出该数组中满足其总和大于等于 target 的长度最小的 子数组 [numsl, numsl+1, ..., numsr-1, numsr] ，并返回其长度。如果不存在符合条件的子数组，返回 0 。 同样是双指针，滑动窗口是暴力解法的优化。 通过 x === Infinity 或 x === -Infinity 判断是否为无穷值。 滑动窗口的时间复杂度：每个元素在滑动窗后进来操作一次，出去操作一次，所以时间复杂度是 2 × n 也就是O(n)。 59. 螺旋矩阵 II给你一个正整数 n ，生成一个包含 1 到 n2 所有元素，且元素按顺时针顺序螺旋排列的 n x n 正方形矩阵 matrix 。 两种创建二维数组方法的对比： 方法 new Array(n).fill(0).map(...) Array.from({ length: n }, ...) 初始化方式 先创建一维数组并用 0 填充，再通过 map 替换为子数组。 直接从类数组对象 { length: n } 生成，通过回调函数初始化子数组。 空槽处理 fill(0) 确保每个位置被填充为 0，map 会遍历每个元素。 Array.from 直接遍历类数组对象的每个索引，无需预填充。 性能 略低于 Array.from，因为多了一次 fill(0) 操作。 略高效，直接通过回调函数初始化，无需中间步骤。 兼容性 ES6+，所有现代浏览器及 Node.js 均支持。 ES6+，兼容性与 map 一致。 58. 区间和题目描述：给定一个整数数组 Array，请计算该数组在每个指定区间内元素的总和。 输入描述：第一行输入为整数数组 Array 的长度 n，接下来 n 行，每行一个整数，表示数组的元素。随后的输入为需要计算总和的区间下标：a，b （b &gt; = a），直至文件结束。 输出描述：输出每个指定区间内元素的总和。 Node.js 输入输出处理详解一、require('readline')：引入模块1const readline = require('readline'); 作用：引入 Node.js 内置的 readline 模块，用于逐行读取输入流。 类比： Python：sys.stdin.readline() C++：getline(cin, line) 原理：提供一个接口，从可读流（如键盘输入）中按行读取数据。 二、readline.createInterface()：创建读取接口1234const rl = readline.createInterface({ input: process.stdin, // 标准输入流（键盘输入） output: process.stdout // 标准输出流（控制台输出）}); 参数说明 input：指定输入流，通常为 process.stdin（Readable Stream） output：指定输出流，通常为 process.stdout（Writable Stream） 类比 C++12cin; // 对应 process.stdincout; // 对应 process.stdout 三、事件监听：rl.on('line', callback)123rl.on('line', (line) =&gt; { inputLines.push(line.trim()); // 逐行读取输入，存入数组}); 常见事件 'line'：用户输入回车时触发，回调参数为当前行的内容（字符串） 'close'：输入流关闭时触发（如用户按 Ctrl+D） line.trim() 作用：去除字符串首尾空格及换行符（如 \\n, \\r） 示例：1' hello\\n'.trim(); // 结果: 'hello' 四、输入结束处理：rl.on('close', callback)1234rl.on('close', () =&gt; { console.log('所有输入:', inputLines); process.exit(0); // 退出程序（可选）}); 触发条件 用户按下 Ctrl+D（Linux/Mac）或 Ctrl+Z + Enter（Windows） 程序主动调用 rl.close() process.exit(0) 作用：终止当前 Node.js 进程 参数含义： 0 表示正常退出 非零值表示异常退出 五、核心流程总结123456789101112// 完整流程示意图const rl = readline.createInterface({ input, output });// 阶段1：逐行读取输入（异步）rl.on('line', (line) =&gt; { // 每输入一行数据，触发一次回调});// 阶段2：输入结束后处理（异步）rl.on('close', () =&gt; { // 所有输入读取完毕，开始处理数据}); 异步特性 使用事件驱动模型 line 和 close 事件的回调函数在事件触发时异步执行 输入与处理分离，适合处理大文件输入 六、常见问题与解决方案Q1：如何处理不同格式的输入？示例输入： 1231 2 3 处理逻辑： 123456789101112131415161718let n = 0;let numbers = [];let step = 0;rl.on('line', (line) =&gt; { if (step === 0) { n = parseInt(line); step = 1; } else if (step === 1) { numbers = line.split(' ').map(Number); rl.close(); // 手动关闭输入流 }});rl.on('close', () =&gt; { console.log('n:', n); console.log('numbers:', numbers);}); Q2：如何处理大文件输入？方案：使用 readline 逐行处理，避免一次性加载整个文件 示例：统计文件行数 12345678const fs = require('fs');const rl = readline.createInterface({ input: fs.createReadStream('input.txt')});let count = 0;rl.on('line', () =&gt; count++);rl.on('close', () =&gt; console.log('总行数:', count)); 七、代码模版1234567891011121314151617function func() { const readline = require('readline'); const rl = readline.createInterface({ input: process.stdin, output: process.stdout }); let inputLines = []; rl.on('line', (line) =&gt; { inputLines.push(line.trim()); }) rl.on('close', function () { // 算法处理... console.log(res); })}func(); 总结：Node.js 输入处理的核心步骤 创建读取接口：readline.createInterface() 绑定标准输入输出流 监听 line 事件：逐行读取输入，存入数组等数据结构 监听 close 事件：在输入结束后处理数据 数据解析：将字符串转换为数值、数组等类型，根据需求进行处理 数组的经典题目二分法 暴力解法时间复杂度：O(n) 二分法时间复杂度：O(logn)。 双指针法 暴力解法时间复杂度：O(n^2) 双指针时间复杂度：O(n) 滑动窗口 暴力解法时间复杂度：O(n^2) 滑动窗口时间复杂度：O(n) 模拟行为重要原则：循环不变量原则。 前缀和 用途一：求数组前 $i$ 个数之和 用途二：求数组的区间和","link":"/%E7%AE%97%E6%B3%95%E9%9A%8F%E6%83%B3%E5%BD%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95%E7%AE%97%E6%B3%95%E8%AE%AD%E7%BB%83%E8%90%A5%E7%AC%AC%E4%BA%8C%E5%A4%A9-%E6%95%B0%E7%BB%84part02/"},{"title":"代码随想录算法训练营第四天|链表Part02","text":"周日补。","link":"/%E6%84%9F%E6%82%9F/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95%E7%AE%97%E6%B3%95%E8%AE%AD%E7%BB%83%E8%90%A5%E7%AC%AC%E5%9B%9B%E5%A4%A9-%E9%93%BE%E8%A1%A8part02/"},{"title":"动态规划算法在 JavaScript 中的应用","text":"在编程和算法设计中，动态规划（Dynamic Programming, DP）是一种强大的技术，用于解决复杂的优化问题。本文将详细介绍动态规划的基本概念、核心思想，并通过一个具体的例子来展示如何在 JavaScript 中实现动态规划。同时，我们还将对比动态规划与其他常见算法（如分治法）的不同之处。 什么是动态规划？动态规划是一种通过把原问题分解为相互重叠的子问题来求解复杂问题的方法。它通常用于优化问题，通过存储子问题的解来避免重复计算，从而提高算法的效率。 动态规划的核心思想 重叠子问题：子问题之间不是独立的，而是相互重叠的。这意味着某些子问题会被多次计算。 最优子结构：问题的最优解可以由其子问题的最优解组合而成。 状态转移：通过一个状态转移方程来描述子问题之间的关系。 存储子问题的解：使用一个表（通常是数组或哈希表）来存储子问题的解，以便后续直接使用。 动态规划的应用场景动态规划广泛应用于各种优化问题，例如背包问题、最长公共子序列、斐波那契数列等。本文将以一个经典的房屋盗窃问题（House Robber）为例，展示如何在 JavaScript 中实现动态规划。 房屋盗窃问题假设你是一个专业的强盗，计划抢劫沿街的房屋。每个房屋都存放有一定数量的现金，但相邻的房屋装有相互连通的防盗系统，如果两间相邻的房屋在同一晚上被强盗闯入，系统会自动报警。给定一个代表每个房屋存放金额的非负整数数组，计算你在不触动警报装置的情况下，能够偷窃到的最高金额。 动态规划解决方案 定义状态： dp[i] 表示到第 i 个房屋为止，可以抢到的最大金额。 初始化： dp[0] = nums[0]：只有一个房屋时，最大金额就是该房屋的金额。 dp[1] = max(nums[0], nums[1])：有两个房屋时，最大金额是这两个房屋中金额较大的那个。 状态转移方程： 对于第i 个房屋，有两种选择： 不抢劫第 i 个房屋，最大金额是 dp[i - 1]。 抢劫第 i 个房屋，最大金额是 dp[i - 2] + nums[i]。 因此，dp[i] = max(dp[i - 2] + nums[i], dp[i - 1])。 返回结果： 最终结果是 dp[len - 1]，即最后一个房屋为止的最大金额。 代码实现123456789101112131415161718192021222324252627282930313233/** * @param {number[]} nums * @return {number} */var max = function (a, b) { return a &gt; b ? a : b;}var rob = function (nums) { // dp[i] 代表到 i 下标元素为止，可以取到的最大值 let len = nums.length; let dp = new Array(len); // 边界条件处理 if (len === 0) return 0; if (len === 1) return nums[0]; dp[0] = nums[0]; dp[1] = max(nums[0], nums[1]); for (let i = 2; i &lt; len; i++) { dp[i] = max(dp[i - 2] + nums[i], dp[i - 1]); } return dp[len - 1];};// 测试用例console.log(rob([1, 2, 3, 1])); // 输出: 4console.log(rob([2, 7, 9, 3, 1])); // 输出: 12console.log(rob([0])); // 输出: 0console.log(rob([1])); // 输出: 1console.log(rob([])); // 输出: 0 逻辑验证 基础案例： 当 nums 为空时，返回 0。 当 nums 只有一个元素时，返回该元素的值。 当 nums 有两个元素时，返回这两个元素中较大的那个。 状态转移方程的正确性： dp[i] = max(dp[i - 2] + nums[i], dp[i - 1])： dp[i - 2] + nums[i] 表示抢劫第 i 个房屋，此时不能抢劫第 i - 1 个房屋，最大金额是 dp[i - 2] 加上 nums[i]。 dp[i - 1] 表示不抢劫第 i 个房屋，最大金额是 dp[i - 1]。 选择这两者中的较大值作为 dp[i] 的值。 递归关系的验证： 通过递归关系，我们可以逐步计算出每个 dp[i] 的值，最终得到 dp[len - 1]，即最大金额。 示例验证假设 nums = [2, 7, 9, 3, 1]，我们手动计算一下 dp 数组的值： dp[0] = nums[0] = 2 dp[1] = max(nums[0], nums[1]) = max(2, 7) = 7 dp[2] = max(dp[0] + nums[2], dp[1]) = max(2 + 9, 7) = max(11, 7) = 11 dp[3] = max(dp[1] + nums[3], dp[2]) = max(7 + 3, 11) = max(10, 11) = 11 dp[4] = max(dp[2] + nums[4], dp[3]) = max(11 + 1, 11) = max(12, 11) = 12 最终结果是 dp[4] = 12，这是正确的最大金额。 动态规划 vs 分治法分治法分治法（Divide and Conquer）是一种将问题分解为若干个规模较小的相同子问题，递归地解决这些子问题，然后将子问题的解合并成原问题的解的方法。 主要特点 独立子问题：子问题之间是独立的，互不影响。 递归：通常使用递归来解决子问题。 合并：将子问题的解合并成原问题的解。 应用场景 经典问题：快速排序、归并排序、二分查找、大整数乘法等。 分解问题：适用于可以自然分解为独立子问题的情况。 动态规划 vs 分治法 子问题的性质： 动态规划：子问题之间重叠，需要存储子问题的解以避免重复计算。 分治法：子问题之间独立，不需要存储子问题的解。 解题过程： 动态规划：通常从底向上（自底向上）解决问题，逐步构建最终解。 分治法：通常从顶向下（自顶向下）解决问题，递归地分解问题，再合并子问题的解。 存储需求： 动态规划：需要额外的空间来存储子问题的解。 分治法：通常不需要额外的空间来存储子问题的解，但递归调用栈会占用一定的空间。 适用问题： 动态规划：适用于具有最优子结构和重叠子问题的问题，通常用于优化问题。 分治法：适用于可以自然分解为独立子问题的问题，通常用于排序、查找等问题。 示例对比动态规划示例：斐波那契数列12345678function fibonacci(n) { let dp = new Array(n + 1).fill(0); dp[1] = 1; for (let i = 2; i &lt;= n; i++) { dp[i] = dp[i - 1] + dp[i - 2]; } return dp[n];} 分治法示例：快速排序123456789101112131415161718192021function quickSort(arr, left = 0, right = arr.length - 1) { if (left &lt; right) { const pivotIndex = partition(arr, left, right); quickSort(arr, left, pivotIndex - 1); quickSort(arr, pivotIndex + 1, right); } return arr;}function partition(arr, left, right) { const pivot = arr[right]; let i = left - 1; for (let j = left; j &lt; right; j++) { if (arr[j] &lt; pivot) { i++; [arr[i], arr[j]] = [arr[j], arr[i]]; } } [arr[i + 1], arr[right]] = [arr[right], arr[i + 1]]; return i + 1;} 总结通过动态规划，可以将问题分解为子问题，并通过状态转移方程逐步求解，最终得到了全局最优解。这种方法的时间复杂度是 O(n)，空间复杂度也是 O(n)，可以通过进一步优化将空间复杂度降低到 O(1)。","link":"/uncategorized/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E7%AE%97%E6%B3%95%E5%9C%A8-javascript-%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8/"},{"title":"回溯算法：从解决组合、切割、子集等问题说起","text":"回溯算法的本质回溯算法的本质是一种暴力搜索的方法。它通过不断地尝试各种可能的解决方案，并在发现不可行的解决方案时回退到之前的状态，然后继续尝试其他的可能性。这种方式可以确保能够找到所有可能的解决方案。 回溯算法的工作原理回溯算法可以抽象为一个 N 叉树的遍历过程。每一个节点代表一种可能的解决方案，而整颗树则包含了所有可能的解决方案。 所有的回溯法都可以抽象为一个树形结构（N叉树），因为回溯是一个递归的过程，而递归是一定有终止的。一般来说，树的宽度就是在回溯法中处理的集合的大小，通常使用for循环来遍历。树的深度，即树的纵向，就是递归来解决的。 回溯算法的基本流程如下： 从根节点开始，选择一个可能的选择。 如果这个选择导致了一个潜在的解决方案，那么就继续向下探索。 如果这个选择导致了一个死胡同（即不满足问题条件），那么就回溯到上一个节点，尝试其他的选择。 如果所有的选择都被尝试过了，那么就意味着找不到满足条件的解决方案。 如果找到了一个满足条件的解决方案，就将其加入到结果集中。 这个过程可以用递归来实现。在递归函数中，我们需要确定三个关键点： 递归函数的参数和返回值 递归的终止条件 单层搜索的逻辑 一般回溯中的递归函数没有返回值，但是参数比较多，不太容易在一开始写代码时就能把所有参数确定下来。 下面我们来看几个具体的例子，了解回溯算法的应用。 组合问题假设我们有一个集合 [1, 2, 3, 4, 5]，要求从中找出所有由 k 个元素组成的组合。 123456789101112131415161718192021222324252627282930/** * 找出集合 nums 中所有由 k 个元素组成的组合 * @param {number[]} nums * @param {number} k * @return {number[][]} */var combine = function(nums, k) { const result = []; const backtrack = (start, combination) =&gt; { // 如果组合的大小达到 k，将其加入结果集 if (combination.length === k) { result.push([...combination]); return; } // 遍历集合中剩余的元素 for (let i = start; i &lt;= nums.length; i++) { // 将当前元素加入组合 combination.push(nums[i - 1]); // 递归下探 backtrack(i + 1, combination); // 回溯，移除最后加入的元素 combination.pop(); } }; backtrack(1, []); return result;}; 在这个例子中，我们定义了一个 backtrack 函数，它接受两个参数：start 表示当前搜索的起点，combination 表示当前的组合。 在每一层递归中，我们都会遍历从 start 开始的剩余元素。对于每个元素，我们先将其加入到当前的组合中，然后递归地继续向下探索。在递归返回时，我们需要恢复组合的状态，即移除最后加入的元素。 这个过程就是一个典型的回溯算法。通过不断尝试各种可能的组合，最终我们就能找到所有满足条件的解决方案。 切割问题假设我们有一个字符串 s = &quot;aab&quot;，要求找出所有可能的切割方案，使得每个子串都是回文串。 123456789101112131415161718192021222324252627282930313233343536373839404142/** * 找出字符串 s 的所有回文串切割方案 * @param {string} s * @return {string[][]} */var partition = function(s) { const result = []; const backtrack = (start, path) =&gt; { // 如果起始索引超过字符串长度，说明找到了一个有效的切割方案 if (start === s.length) { result.push([...path]); return; } for (let i = start; i &lt; s.length; i++) { // 判断 [start, i] 范围内的子串是否是回文串 if (isPalindrome(s, start, i)) { // 如果是回文串，将其加入到当前的切割方案中 path.push(s.slice(start, i + 1)); // 递归探索剩余部分 backtrack(i + 1, path); // 回溯，移除最后加入的子串 path.pop(); } } }; const isPalindrome = (s, left, right) =&gt; { while (left &lt; right) { if (s[left] !== s[right]) { return false; } left++; right--; } return true; }; backtrack(0, []); return result;}; 在这个例子中，我们定义了一个 backtrack 函数，它接受两个参数：start 表示当前搜索的起点，path 表示当前的切割方案。 在每一层递归中，我们会遍历从 start 开始的所有可能的切割点。对于每个切割点 i，我们先判断 [start, i] 范围内的子串是否是回文串。如果是，我们就将其加入到当前的切割方案中，并递归地继续向下探索。在递归返回时，我们需要恢复切割方案的状态，即移除最后加入的子串。 这个过程同样是一个典型的回溯算法。通过不断尝试各种可能的切割方案，最终我们就能找到所有满足条件的解决方案。 子集问题假设我们有一个集合 nums = [1, 2, 3]，要求找出所有可能的子集。 12345678910111213141516171819202122232425/** * 找出集合 nums 的所有子集 * @param {number[]} nums * @return {number[][]} */var subsets = function(nums) { const result = []; const backtrack = (start, subset) =&gt; { // 将当前的子集加入结果集 result.push([...subset]); for (let i = start; i &lt; nums.length; i++) { // 将当前元素加入子集 subset.push(nums[i]); // 递归探索剩余部分 backtrack(i + 1, subset); // 回溯，移除最后加入的元素 subset.pop(); } }; backtrack(0, []); return result;}; 在这个例子中，我们定义了一个 backtrack 函数，它接受两个参数：start 表示当前搜索的起点，subset 表示当前的子集。 在每一层递归中，我们首先将当前的子集加入到结果集中。然后遍历从 start 开始的剩余元素。对于每个元素，我们先将其加入到当前的子集中，然后递归地继续向下探索。在递归返回时，我们需要恢复子集的状态，即移除最后加入的元素。 这个过程同样是一个典型的回溯算法。不同之处在于，在每一层递归中，我们都会先将当前的子集加入到结果集中。这样做是为了确保能够找到所有可能的子集。 小结通过以上几个例子，我们可以看到回溯算法的核心思想是通过不断尝试各种可能的解决方案，并在发现不可行的解决方案时回退到之前的状态，然后继续尝试其他的可能性。这种方式可以确保能够找到所有可能的解决方案。 回溯算法的工作原理可以抽象为一个 N 叉树的遍历过程。在实现回溯算法时，我们需要明确三个关键点：递归函数的参数和返回值、递归的终止条件以及单层搜索的逻辑。通过这些关键点，我们就可以构建出一个通用的回溯算法框架，并应用于解决各种组合、切割、子集等问题。","link":"/uncategorized/%E5%9B%9E%E6%BA%AF%E7%AE%97%E6%B3%95%EF%BC%9A%E4%BB%8E%E8%A7%A3%E5%86%B3%E7%BB%84%E5%90%88%E3%80%81%E5%88%87%E5%89%B2%E3%80%81%E5%AD%90%E9%9B%86%E7%AD%89%E9%97%AE%E9%A2%98%E8%AF%B4%E8%B5%B7/"},{"title":"Icarus用户指南 - CDN提供商","text":"选择合适的CDN提供商可以大幅度减少网站访客的网页加载时间。 Icarus为你提供了几种内置的CDN提供商来承载Icaurs所用到的第三方库和资源文件的加载。 本文同时提供以下语言的翻译：English。 下面的CDN功能由ppoffice/hexo-component-inferno提供，完整的支持提供商列表和配置详情以其为准。 内置CDN提供商目前，Icarus提供如下的内置CDN服务提供商： JavaScript库CDN cdnjs.com (cdnjs) jsDelivr (jsdelivr) UNPKG (unpkg) loli.net (loli) Web字体CDN Google Fonts (google) loli.net (loli) font.im (fontim) 中国科学技术大学 (ustc) FontAwesome图标CDN FontAwesome 5 (fontawesome) loli.net (loli) 默认的CDN服务提供商配置为： _config.icarus.yml1234providers: cdn: jsdelivr fontcdn: google iconcdn: fontawesome 自定义CDN提供商除此之外，你还可以通过URL模板来自定义CDN提供商。 每种类别提供商的模板格式如下所示： JavaScript库CDNCDN URL模板1https://some.cdn.domain.name/${package}/${version}/${filename} 你需要将实际的包名称，包版本号，和文件相对路径替换为${package}， ${version}，和${filename}占位符。 例如，如下JavaScript库的URL地址： UNPKG CDN URL示例1https://unpkg.com/d3@5.7.0/dist/d3.min.js 可以被概括成： UNPKG CDN URL模板1https://unpkg.com/${package}@${version}/${filename} 一些CDN提供商可能采用不同的URL形式。 例如，moment.js库在CDN.js上有着如下的URL形式： CDN.js CDN URL示例1https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.22.2/moment.js 但在UNPKG上有着这样的URL形式： UNPKG CDN URL示例1https://unpkg.com/moment@2.22.2/min/moment.min.js 因此，你需要注意你的自定义CDN提供商的URL格式。 默认情况下，Icarus向URL模板中传入的参数采用npm的包名称和文件相对路径（例如moment@2.22.2/min/moment.min.js）。 jsDelivr和UNPKG就采用这种npm形式。 否则，如果你采用如CDN.js这样的CDN提供商，请在URL模板前加上[cdnjs]： CDN.js-style URL模板1'[cdnjs]https://some.cdn.domain.name/${package}/${version}/${filename}' Web字体CDN你可以参入Google字体镜像站的URL或是与其兼容的网络字体CDN。 Icarus依赖Ubuntu，Oxanium，和Source Code Pro这三种字体，所以确保你使用的CDN提供这些字体。 自定义的URL模板需包含字体类型type（图标icon或是字体font）和字体名称fontname两个占位符： Webfont CDN URL模板1https://some.google.font.mirror/${type}?family=${fontname} FontAwesome图标CDN你可以传入自定义的FontAwesome CDN提供商的URL。 URL中不需要包含占位符。 本主题用到了一些FontAwesome 5图标，所以自定义的提供商需要至少提供它们。 Icon Font CDN URL模板1https://custom.fontawesome.mirror/some.stylesheet.css 以上自定义配置需放到主题配置中的providers部分： _config.icarus.yml1234providers: cdn: 'https://some.cdn.domain.name/${package}/${version}/${filename}' fontcdn: 'https://some.google.font.mirror/${type}?family=${fontname}' iconcdn: 'https://custom.fontawesome.mirror/some.stylesheet.css' CDN工具函数本主题定义了三个工具函数来帮助主题开发者轻松使用自定义CDN来引用第三方的前端资源。 详情请参见ppoffice/hexo-component-inferno. 文章内容有误？请点击此处提交修改。","link":"/Configuration/icarus%E7%94%A8%E6%88%B7%E6%8C%87%E5%8D%97-cdn%E6%8F%90%E4%BE%9B%E5%95%86/"},{"title":"Icarus用户指南 - 用户评论插件","text":"本文介绍Icarus 5支持的用户评论插件的安装配置。 本文同时提供以下语言的翻译：English。 下面的用户评论插件由ppoffice/hexo-component-inferno提供，完整的支持插件列表和配置详情以其为准。 .content ol:not([type]) { list-style-type: simp-chinese-informal; } 畅言安装指南 首先，登录畅言云评， 并按照PC端通用代码接入文档获取评论HTML代码。 复制appid与conf的值到主题配置的对应配置项中。 例如，如下的HTML代码： 畅言安装代码 >folded123456789&lt;!--PC版--&gt;&lt;div id=&quot;SOHUCS&quot; sid=&quot;...&quot;&gt;&lt;/div&gt;&lt;script charset=&quot;utf-8&quot; type=&quot;text/javascript&quot; src=&quot;https://cy-cdn.kuaizhan.com/upload/changyan.js&quot; &gt;&lt;/script&gt;&lt;script type=&quot;text/javascript&quot;&gt;window.changyan.api.config({ appid: '????appid????', conf: 'prod_xxxxxxxxxxxxxxxxxxxxxxx'});&lt;/script&gt; 对应到主题配置为： _config.icarus.yml1234comment: type: changyan app_id: ????appid???? conf: prod_xxxxxxxxxxxxxxxxxxxxxxx Disqus 安装指南在线预览 首先，登录Disqus。 点击首页的“开始”(GET STARTED)按钮或者访问 此处并点击“我想要将Disqus安装到我的站点” (I want to install Disqus on my site)来创建新的站点评论服务。 在创建新站点页面中填写“网站名称”(Website Name)以及“网站类型”(Category)，然后点击“创建站点”(Create Site)。 如果你愿意的话，选择一个付费订阅。 你也可以点击左侧的“安装Disqus”(Install Disqus)来跳过此步。 下一步，选择Disqus的安装平台。 此处选择页面底部的“上面没有列出我使用的平台，使用通用代码安装” (I don’t see my platform listed, install manually with Universal Code)。 点击页面底部的“配置”(Configure)按钮跳过“通用代码安装指南”(Universal Code install instructions)。 在“配置Disqus”(Configure Disqus)页面中按需填写Disqus个性化配置。 然后，点击“完成安装”(Complete Setup)和“关闭配置”(Dismiss Setup)按钮来结束配置。 下一步，在评论服务首页的右上角点击“编辑配置”(Edit Settings)按钮。 在“为你的站点配置Disqus”(Configure Disqus for Your Site)页面上找到“Shortname”的值， 复制到主题配置的评论配置项中。 例如，下面截图中的“Shortname”为my-hexo-blog-1： 对应的主题配置为： _config.icarus.yml123comment: type: disqus shortname: my-hexo-blog-1 （可选）你可以在文章的front-matter中加入disqusId来为文章添加Disqus唯一标识。 这样，你可以在未来更改文章的位置而不会丢失所有评论。 source/_post/some-post.md12345title: 我的第一篇文章date: 2015-01-01 00:00:01disqusId: some-disqus-id---# Hello world DisqusJS在Disqus服务访问受限的地区可使用DisqusJS作为替代。 关于DisqusJS的配置过程可参考https://github.com/SukkaW/DisqusJS。 安装指南在线预览 登录Disqus并访问此链接。 点击“注册新应用”(Register new application)或者“注册应用”(registering an application)来创建新的Disqus应用。 在下一页面中填写”应用名称“(Label)，”介绍“(Description)，以及”网站地址“(Website)。 然后点击“注册我的应用”(Register my application)。 应用创建完毕后，进入应用的”设置“(Settings)界面，在”域名“(Domains)输入框中填入你Hexo站点的域名，例如ppoffice.github.io。 然后点击页面底部的“保存更改”(Save Changes)按钮。 点击当前页面中的“详情”(Details)链接切换到当前应用的主页。 从”OAuth设置“(OAuth Settings)部分中复制”API Key“到相应的主题配置项中。 例如，下面截图中的”API Key“： 对应为下面的主题配置： _config.icarus.yml12345678comment: type: disqusjs shortname: my-hexo-blog-1 api_key: xxxxxxxxxxxxxxxxxxxxxxxxxxxxx api: https://disqus.skk.moe/disqus/ # 可选填 admin: ppoffice # 可选填 admin_label: Admin # 可选填 nesting: 4 # 可选填 如要更多了解DisqusJS和它的配置，请访问SukkaW/DisqusJS文档或 hexo-component-inferno。 Facebook 此评论插件可能会被部分广告拦截扩展拦截，请酌情使用。 安装指南在线预览 如要开启Facebook评论服务，将comment的type设置为facebook即可。 _config.icarus.yml12comment: type: facebook Giscus利用 GitHub Discussions 实现的评论系统。 安装指南在线预览 准备一个公开的 GitHub 仓库（Repository）。 访问GitHub Apps - giscus并点击”安装“(Install)。 (可选)如果你的账号下有组织账号，在下一页中选择需要安装 giscus 的用户。 在下一页面选择将 giscus 安装到”所有仓库“(All repositories)或是”选定的仓库“(Only select repositories)。 然后点击“安装”(Install)按钮。 若安装成功，网页将跳转到 giscus 官网。 你可以阅读每个的配置项的说明，并按照配置你的 giscus 安装。 完成配置后，转到页面上的”启用 giscus “(Enable giscus)并从 giscus 的 HTML 代码中复制属性值到主题配置的对应配置项中。 例如下面的 giscus 代码： giscus 安装代码 >folded12345678910111213141516&lt;script src=&quot;https://giscus.app/client.js&quot; data-repo=&quot;usr/repo&quot; data-repo-id=&quot;X_xxxxxxxxxx&quot; data-category=&quot;Announcements&quot; data-category-id=&quot;XXX_xxxxxxxxxxxxxxxx&quot; data-mapping=&quot;pathname&quot; data-strict=&quot;0&quot; data-reactions-enabled=&quot;0&quot; data-emit-metadata=&quot;0&quot; data-input-position=&quot;top&quot; data-theme=&quot;noborder_light&quot; data-lang=&quot;zh-CN&quot; data-loading=&quot;lazy&quot; crossorigin=&quot;anonymous&quot; async&gt;&lt;/script&gt; 对应下面的主题配置： _config.icarus.yml1234567891011121314comment: type: giscus repo: usr/repo # 必填项 repoId: X_xxxxxxxxxx # 必填项 category: Announcements # 可选填，默认为 Announcements categoryId: XXX_xxxxxxxxxxxxxxxx # 必填项 mapping: pathname # 可选填，默认为 pathname strict: false # 可选填 reactionsEnabled: false # 可选填 emitMetadata: false # 可选填 inputPosition: top # 可选填，默认为 top theme: noborder_light # 可选填 lang: zh-CN # 可选填，默认为 en lazy: true # 可选填，默认为 false Gitalk 安装指南在线预览 登录GitHub并点此注册一个新的OAuth应用。 填写”应用名称“(Application name)，”应用主页“(Homepage URL)，”应用描述“(Application description)。 然后，在”认证回调地址“(Authorization callback URL)填写你的博客的根URL地址。 点击“注册应用”(Register application)按钮来跳转到应用详情界面。 复制”Client ID“与”Client Secret“的值并填入主题配置的相应配置项中。 例如，对于下面的”Client ID“和”Client Secret“： GitHub OAuth应用1234Client IDxxxxxxxxxxxxxxxxxxxxClient Secretxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 对应如下的Gitalk的配置： _config.icarus.yml12345678910111213141516comment: type: gitalk client_id: xxxxxxxxxxxxxxxxxxxx client_secret: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx repo: Some-of-Your-GitHub-Repo owner: you_github_name admin: - you_github_name per_page: 20 # 可选填 distraction_free_mode: false # 可选填 pager_direction: last # 可选填 create_issue_manually: false # 可选填 proxy: # 可选填 flip_move_options: # 可选填 enable_hotkey: true # 可选填 language: zh-CN # 可选填 关于上述配置的含义和可选值，请参考Gitalk文档或 hexo-component-inferno。 Gitment Gitment似乎已停止维护。你可以选择Gitalk或utterances作为基于GitHub Issues的评论系统的替代。 安装指南 参照Gitalk中的步骤注册GitHub OAuth应用。 复制”Client ID“与”Client Secret“的值到主题配置的相应配置项中。 下面是Gitment的示例配置： _config.icarus.yml123456789comment: type: gitment owner: you_github_name repo: Some-of-Your-GitHub-Repo client_id: xxxxxxxxxxxxxxxxxxxx client_secret: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx theme: gitment.defaultTheme # 可选填 per_page: 20 # 可选填 max_comment_height: 250 # 可选填 关于上述配置的含义，请参考Gitment文档或 hexo-component-inferno。 Isso如果你希望自己搭建一个评论系统而不是依赖第三方的评论服务时，Isso是一个可行的选择。 然而，不同于第三方评论系统，你需要准备一个Web服务器用来运行Isso服务端程序。 安装指南 请参照Isso文档安装并启动Isso服务器。 将Isso服务器的HTTP URL填入到主题配置的相应配置项中。 例如，如果你的Isso服务地址为https://posativ.org/isso/api/，你会有如下的评论配置： _config.icarus.yml123comment: type: isso url: posativ.org/isso/api LiveRe 此评论插件可能会被部分广告拦截扩展拦截，请酌情使用。 安装指南 首先，登录LiveRe。 点击导航栏上的“安装”(Install)链接，进入安装界面。 选择免费”City“选项下方的“现在安装”(Install Now)按钮。 在”获取LiveRe City代码“(Get LiveRe City code)页面填写”站点地址“(Site URL)，”网站名称“(Name of website)， 和”网站类别“(Choose site category)。 勾选“同意广告协议”(I have check the advertising terms…)并点击”获取代码“(Get code)按钮来跳转到LiveRe HTML代码页面。 复制data-uid=&quot;...&quot;引号内的值到主题配置中的相应配置项中。 例如，下方的LiveRe代码： LiveRe安装代码 >folded123456789101112131415161718&lt;!-- LiveRe City install code --&gt;&lt;div id=&quot;lv-container&quot; data-id=&quot;city&quot; data-uid=&quot;ABCD1234O0OxxxxXXXX000==&quot;&gt; &lt;script type=&quot;text/javascript&quot;&gt; (function(d, s) { var j, e = d.getElementsByTagName(s)[0]; if (typeof LivereTower === 'function') { return; } j = d.createElement(s); j.src = 'https://cdn-city.livere.com/js/embed.dist.js'; j.async = true; e.parentNode.insertBefore(j, e); })(document, 'script'); &lt;/script&gt;&lt;noscript&gt; Please activate JavaScript for write a comment in LiveRe&lt;/noscript&gt;&lt;/div&gt;&lt;!-- completed City install code --&gt; 对应的主题配置为： _config.icarus.yml123comment: type: livere uid: ABCD1234O0OxxxxXXXX000== TwikooTwikoo是一个基于云函数的自建评论系统。 不同于其他第三方评论服务，在Icarus中设置和使用Twikoo之前，你需要将它的后端部署到云环境上。 安装指南在线预览 按照Twikoo文档，将Twikoo云函数部署到你指定的云服务商之上。 将你部署的env_id填入主题设置中的对应设置项之中。 _config.icarus.yml12345comment: type: twikoo env_id: xxxxxxxx region: ap-guangzhou # 可选填 lang: zh-CN # 可选填 utterances 安装指南在线预览 准备一个公开的GitHub仓库(Repository)。 访问GitHub Apps - utterances并点击”安装“(Install)。 (可选)如果你的账号下有组织账号，在下一页中选择需要安装utterances的用户。 在下一页面选择将utterances安装到”所有仓库“(All repositories)或是”选定的仓库“(Only select repositories)。 然后点击“安装”(Install)按钮。 若安装成功，网页将跳转到utterances官网。 你可以阅读每个的配置项的说明，并按照配置你的utterances安装。 完成配置后，转到页面上的”开启utterances“(Enable Utterances)并从utterances的HTML代码中复制属性值到主题配置的对应配置项中。 例如下面的utterances代码： utterances安装代码 >folded1234567&lt;script src=&quot;https://utteranc.es/client.js&quot; repo=&quot;Your-GitHub-Username/Your-Public-Repo-Name&quot; issue-term=&quot;pathname&quot; theme=&quot;github-light&quot; crossorigin=&quot;anonymous&quot; async&gt;&lt;/script&gt; 对应下面的主题配置： _config.icarus.yml1234567comment: type: utterances repo: Your-GitHub-Username/Your-Public-Repo-Name issue_term: pathname # 必填项，与issue_number二选一填写 issue_number: 100 # 必填项，与issue_term二选一填写，每篇文章对应一个issue，填写前需要手动创建issue label: some-issue-label # 可选填 theme: github-light # 可选填 Valine 安装指南在线预览 有用户发现一个存在于Valine评论插件的漏洞会导致此评论服务暴露所有评论者的 IP地址 (xCss/Valine#336)。 请在此漏洞修复之前换用其他评论服务。 按照快速开始文档创建LeanCloud应用。 将你LeanCloud应用的”App ID“和”App Key“复制到主题配置的对应配置项中。 此外，你可以参考配置项来了解可选配置项的详情和可能的配置值。 下面是示例配置： _config.icarus.yml123456789101112131415161718comment: type: valine app_id: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx app_key: xxxxxxxxxxxxxxxxxxxxxx placeholder: &quot;&quot; # 可选填 avatar: mm # 可选填 avatar_force: false # 可选填 meta: [&quot;nick&quot;, &quot;mail&quot;, &quot;link&quot;] # 可选填 page_size: 10 # 可选填 lang: zh-CN # 可选填 visitor: false # 可选填 highlight: true # 可选填 record_ip: false # 可选填 server_urls: # 可选填 emoji_cdn: # 可选填 emoji_maps: # 可选填 enable_qq: false # 可选填 required_fields: [] # 可选填 Waline 安装指南在线预览 按照快速上手创建LeanCloud应用和Vercel项目。 将你Vercel项目的”服务器地址“(Server URL)复制到主题配置的对应配置项中。 通常它类似于https://your-domain.vercel.app。 此外，你可以参考前端配置来了解可选配置项的详情和可能的配置值。 下面是示例配置： _config.icarus.yml12345678910111213141516171819202122comment: type: waline server_url: https://your-domain.vercel.app path: window.location.pathname # 可选填 lang: zh-CN # 可选填 locale: # 可选填 placeholder: 'Comment here...' emoji: # 可选填 - '//unpkg.com/@waline/emojis@1.0.1/weibo' dark: auto # 可选填 meta: [&quot;nick&quot;, &quot;mail&quot;, &quot;link&quot;] # 可选填 required_meta: [] # 可选填 login: enable # 可选填 word_limit: 0 # 可选填 page_size: 10 # 可选填 image_uploader: false # 可选填 highlighter: true # 可选填 tex_renderer: false # 可选填 search: false # 可选填 pageview: false # 可选填 comment: false # 可选填 copyright: true # 可选填 文章内容有误？请点击此处提交修改。","link":"/Plugins/Comment/icarus%E7%94%A8%E6%88%B7%E6%8C%87%E5%8D%97-%E7%94%A8%E6%88%B7%E8%AF%84%E8%AE%BA%E6%8F%92%E4%BB%B6/"},{"title":"自定义Hexo标签插件","text":"除了Hexo 内置标签指南中描述的Hexo原生支持的标签插件以外，Icarus也提供其他 几个用来定制内容显示的有用的标签插件。 本文同时提供以下语言的翻译：English。 下面的标签插件由ppoffice/hexo-component-inferno提供，完整的支持插件列表和配置详情以其为准。 .example-tab-container { margin: 0 0 20px 0; padding: 10px 20px 20px 20px; border-radius: 6px; box-shadow: 0 0.5em 0.75em -0.125em rgba(10,10,10,0.1), 0 0px 0 1px rgba(10,10,10,0.02); } 消息五颜六色的消息块可以用来强调你文章中的部分文本。 它的语法定义如下： 123{% message color:&lt;颜色&gt; size:&lt;大小&gt; icon:&lt;图标&gt; title:&lt;标题&gt; %} &lt;内容&gt;{% endmessage %} color此选项定义消息块的颜色。 其为可选项。 它可用的配置值与示例如下： default 一个没有设置颜色的代码块。 dark 一个深色(dark)的代码块。 primary 一个主题色(primary)的代码块。 info 一个提示色(info)的代码块。 success 一个成功色(success)的代码块。 warning 一个警示色(warning)的代码块。 danger 一个危险色(danger)的代码块。 size此选项定义消息块的大小。 其为可选项。 它可用的配置值与示例如下： small 一个小(small)的代码块。 default 一个没有设置大小的代码块。 medium 一个中等大小(small)的代码块。 large 一个大(small)的代码块。 icon此选项定义显示在消息块头部的图标。 其为可选项。 它的值应为FontAwesome的图标class name。 如果图标的class name含有空格，则配置名与配置值需要用引号包裹住。 一个有着GitHub图标的消息块 一个有着GitHub图标(&quot;icon:fa-brands fa-github&quot;)的消息块。 一个有着Node.js图标的消息块 一个有着Node.js图标(&quot;icon:fa-brands fa-node-js&quot;)的消息块。 一个有着NPM图标的消息块 一个有着NPM图标(&quot;icon:fa-brands fa-npm&quot;)的消息块。 title此选项定义消息块的标题。 其为可选项。 如果标题含有空格，则配置名与配置值需要用引号包裹住。 有标题的消息块 有标题的消息块(&quot;title:有标题的消息块&quot;)。 没有标题的消息块。 没有标题的消息块。 没有标题的消息块。 没有标题的消息块。 没有标题的消息块。 没有标题的消息块。 没有标题的消息块。 标签页标签页是一个功能强大的用于展示平行内容的标签插件。 同一时间内，只有活动的标签页内容才能展示给用户。 它的语法定义如下： 123456789{% tabs size:&lt;大小&gt; align:&lt;对齐&gt; style:&lt;样式&gt; %}&lt;!-- tab id:&lt;标签ID&gt; icon:&lt;图标&gt; title:&lt;标签标题&gt; active --&gt;&lt;标签内容&gt;&lt;!-- endtab --&gt;&lt;!-- tab id:&lt;标签ID&gt; icon:&lt;图标&gt; title:&lt;标签标题&gt; --&gt;&lt;标签内容&gt;&lt;!-- endtab --&gt;...{% endtabs %} 标签容器一个标签容器有着以下选项： size此选项定义标签页的大小。 其为可选项。 它可用的配置值与示例如下： 第一页 第二页 这是一个小(small)标签页容器的第一页。 这是一个小(small)标签页容器的第二页。 第一页 第二页 这是一个没有指定大小的标签页容器的第一页。 这是一个没有指定大小的标签页容器的第二页。 第一页 第二页 这是一个中等大小(medium)标签页容器的第一页。 这是一个中等大小(medium)标签页容器的第一页。 第一页 第二页 这是一个大(large)标签页容器的第一页。 这是一个大(large)标签页容器的第二页。 align此选项定义标签页按钮的对齐方式。 其为可选项。 它可用的配置值与示例如下： 第一页 第二页 这是一个没有指定对齐方式的标签页容器的第一页。 这是一个没有指定对齐方式的标签页容器的第二页。 第一页 第二页 这是一个居中对齐的(centered)标签页容器的第一页。 这是一个居中对齐的(centered)标签页容器的第二页。 第一页 第二页 这是一个右对齐的(right)标签页容器的第一页。 这是一个右对齐的(right)标签页容器的第二页。 第一页 第二页 这是一个全宽的(fullwidth)标签页容器的第一页。 这是一个全宽的(fullwidth)标签页容器的第二页。 style此选项定义标签页按钮的样式。 其为可选项。 此外你可以将样式与全宽(fullwidth)对齐方式结合。 它可用的配置值与示例如下： 第一页 第二页 这是一个盒状(boxed)标签页容器的第一页。 这是一个盒状(boxed)标签页容器的第二页。 第一页 第二页 这是一个拨动开关状(toggle)标签页容器的第一页。 这是一个拨动开关状(toggle)标签页容器的第二页。 第一页 第二页 这是一个圆角拨动开关状(toggle-rounded)标签页容器的第一页。 这是一个圆角拨动开关状(toggle-rounded)标签页容器的第二页。 第一页 第二页 这是一个全宽(fullwidth)盒状(boxed)标签页容器的第一页。 这是一个全宽(fullwidth)盒状(boxed)标签页容器的第二页。 第一页 第二页 这是一个全宽(fullwidth)拨动开关状(toggle)标签页容器的第一页。 这是一个全宽(fullwidth)拨动开关状(toggle)标签页容器的第二页。 第一页 第二页 这是一个全宽(fullwidth)圆角拨动开关状(toggle-rounded)标签页容器的第一页。 这是一个全宽(fullwidth)圆角拨动开关状(toggle-rounded)标签页容器的第二页。 Tab一个标签页有如下选项： id此选项为标签页元素的独特标识符(ID)。 此项为必填项。 一个标签页ID应当在整个页面内为独一无二的，这样Icarus才能定位、显示、和隐藏正确的标签页内容。 active此选项标记当前的标签页是否默认显示。 此项为选填项。 同一时刻一个标签组中只有一个标签页可以标记为活动(active)标签页。 icon此选项定义标签按钮中显示的图标。 此项为选填项。 它的值应为FontAwesome图标的class name。 如果图标的class name含有空格，则配置名与配置值需要用引号包裹住。 GitHub Node.js 这个标签页的图标(icon)为&quot;icon:fa-brands fa-github&quot;。 这个标签页的图标(icon)为&quot;icon:fa-brands fa-node-js&quot;。 GitHub Node.js 这个标签页的图标(icon)为&quot;icon:fa-brands fa-github&quot;。 这个标签页的图标(icon)为&quot;icon:fa-brands fa-node-js&quot;。 title此选项定义标签按钮的标题。 其为可选项。 如果标题含有空格，则配置名与配置值需要用引号包裹住。 有标题的标签页 另一个有标题的标签页 这个标签页的标题(title)为(&quot;title:有标题的标签页&quot;)。 这个标签页的标题(title)为(&quot;title:另一个有标题的标签页&quot;)。","link":"/uncategorized/%E8%87%AA%E5%AE%9A%E4%B9%89hexo%E6%A0%87%E7%AD%BE%E6%8F%92%E4%BB%B6/"},{"title":"Icarus用户指南 - 主题配置","text":"Icarus的默认主题配置文件为_config.icarus.yml。 此文件定义了站点全局的布局与样式设置，同时也控制了例如插件与挂件等外部功能的配置。 本文详细介绍了本主题的一般配置，并且解释了Icarus使用哪些配置文件和它是如何生成并验证这些配置。 本文同时提供以下语言的翻译： English. .content ol:not([type]) { list-style-type: simp-chinese-informal; } 一般主题配置配置文件版本这个版本号与主题版本号相关却不总是相同。 Icarus使用此版本号来决定是否升级默认主题配置文件。 请不要自己更改这个版本号。 _config.icarus.yml1version: 5.0.0 主题变体通过此设置为Icarus更换”皮肤“。 此设置目前支持”default“和”cyberpunk“两种值。 你可以在此处查看Cyberpunk变体的效果。 _config.icarus.yml1variant: default Logo设置你站点的logo。 此logo会显示在导航栏和页脚。 logo配置的值既可以是你的logo图片的路径或URL地址： _config.icarus.yml1logo: /img/logo.svg 也可以像下面这样设置成文字： _config.icarus.yml12logo: text: My Beautiful Site Favicon你可以在head配置中指定你的网站favicon的路径或URL地址。 _config.icarus.yml12head: favicon: /img/favicon.svg Web App ManifestIcarus支持基本的PWAmanifest.json的生成与Meta标签。 要开启web app manifest，请再主题配置中使用如下的配置。 你也可以参考MDN来了解每个配置项的详情。 _config.icarus.yml >folded1234567891011121314151617181920212223242526272829manifest: # Web应用的名称 (默认为站点标题) name: Icaurs - Hexo Theme # Web的显示名称 # 当没有空间显示全名时显示 short_name: Icarus # Web应用的初始URL start_url: https://ppoffice.github.io/ # 应用的默认主题颜色 theme_color: &quot;#3273dc&quot; # 在应用的样式表加载之前显示的应用页默认占位背景颜色 background_color: &quot;#3273dc&quot; # 网站首选的展示模式 display: standalone # 在不同上下文下用作应用图标的图片文件 icons: - # 图片文件的路径 src: icons/touch-icon-iphone.png # 空格分割的表示图标尺寸的字符串 sizes: 144x144 # 图片的媒体类型提示 (可选) type: image/png - src: icons/touch-icon-ipad.png sizes: 152x152 - src: icon/logo.ico sizes: 72x72 96x96 128x128 256x256 Open Graph你可以在head配置中设置Open Graph。 你应该在配置文件中将绝大部分配置留空。 仅在需要的时候在文章的front-matter中为这些设置赋值。 请参考Hexo文档来详细了解每个配置项。 _config.icarus.yml >folded12345678910111213141516171819202122232425262728head: open_graph: # 页面标题 (og:title) (可选) title: # 页面类型 (og:type) (可选) type: blog # 页面URL地址 (og:url) (可选) url: # 页面封面图 (og:image) (可选) image: # 站点名称 (og:site_name) (可选) site_name: # 页面作者 (article:author) (可选) author: # 页面描述 (og:description) (可选) description: # Twitter卡片类型 (twitter:card) twitter_card: # Twitter ID (twitter:creator) twitter_id: # Twitter站点 (twitter:site) twitter_site: # Google+个人主页链接 (已弃用) google_plus: # Facebook admin ID fb_admins: # Facebook App ID fb_app_id: Google Structured Data你可以在head配置中设置Google Structured Data。 你应该在配置文件中将绝大部分配置留空。 仅在需要的时候在文章的front-matter中为这些设置赋值。 请参考Search for Developers来详细了解每个配置项。 _config.icarus.yml >folded12345678910111213141516head: structured_data: # 页面标题 (可选) title: # 页面描述 (可选) description: # 页面URL地址 (可选) url: # 页面作者 (article:author) (可选) author: # 页面图片 (可选) image: # 文章发布者 (可选) publisher: # 发布者Logo (可选) publisher_logo: 页面元信息你可以通过head部分的meta设置来向生成的HTML中添加自定义&lt;meta&gt;标签。 每一个meta标签应作为meta数组中的一个元素出现。 meta设置每一个元素的值应为&lt;属性名&gt;=&lt;属性值&gt;的格式，其中属性名和属性值分别代表着&lt;meta&gt;标签的属性和值。 如果&lt;meta&gt;标签有多个属性和值，请使用;来分隔&lt;属性名&gt;=&lt;属性值&gt;。 _config.icarus.yml1234head: meta: - 'name=theme-color;content=#123456' - 'name=generator;content=&quot;Hexo 4.2.0&quot;' RSS你可以通过head部分的rss设置来添加RSS链接信息。 _config.icarus.yml12head: rss: /path/to/atom.xml 导航栏navbar部分定义了导航栏中的菜单与链接。 你可以通过向menu设置项中添加&lt;链接名&gt;: &lt;链接URL&gt;的方式添加任意导航栏菜单链接。 如要向导航栏右侧添加链接，请向links设置项中添加&lt;链接名&gt;: &lt;链接URL&gt;。 _config.icarus.yml1234567891011121314navbar: # 导航栏菜单项 menu: Home: / Archives: /archives Categories: /categories Tags: /tags About: /about # 导航栏右侧的链接 links: GitHub: 'https://github.com' Download on GitHub: icon: fab fa-github url: 'https://github.com/ppoffice/hexo-theme-icarus' 你也可以使用FontAwesome图标来作为纯文字链接的替换，格式如下： 链接格式123&lt;链接名&gt;: icon: &lt;FontAwesome图标的class名&gt; url: &lt;链接URL&gt; 页脚footer部分定义了页脚右侧的链接。 链接的配置格式与navbar中links的配置格式完全一致。 _config.icarus.yml1234567891011footer: links: Creative Commons: icon: fab fa-creative-commons url: 'https://creativecommons.org/' Attribution 4.0 International: icon: fab fa-creative-commons-by url: 'https://creativecommons.org/licenses/by/4.0/' Download on GitHub: icon: fab fa-github url: 'https://github.com/ppoffice/hexo-theme-icarus' 你也可以在页脚展示自定义版权文字： _config.icarus.yml12footer: copyright: 用💖发电 代码高亮如果你已在Hexo中启用了代码高亮功能，你可以通过article中的highlight设置来自定义代码块。 请从highlight.js/src/styles下列出的所有主题中 选择一个主题。 然后，复制文件名(不带.css后缀)到theme设置项中。 如要隐藏复制代码按钮，将clipboard设置为false。 如果你希望折叠或展开所有代码块，将fold设置为&quot;folded&quot;或&quot;unfolded&quot;。 你也可以将fold设置为空来禁止代码块折叠。 _config.icarus.yml123456789article: highlight: # 代码高亮主题 # https://github.com/highlightjs/highlight.js/tree/master/src/styles theme: atom-one-light # 显示复制代码按钮 clipboard: true # 代码块的默认折叠状态。可以是&quot;&quot;, &quot;folded&quot;, &quot;unfolded&quot; fold: unfolded 此外，你可以在Markdown文件中使用下面的语法来折叠单独的代码块： 123{% codeblock &quot;可选文件名&quot; lang:代码语言 &gt;folded %}...代码块内容...{% endcodeblock %} 封面 &amp; 缩略图若要为文章添加封面图，请在文章的front-matter中添加cover选项： post.md1234title: Icarus快速上手cover: /gallery/covers/cover.jpg---Post content... 类似地，你也可以在文章的front-matter中为文章设置缩略图： post.md1234title: Icarus快速上手thumbnail: /gallery/covers/thumbnail.jpg---Post content... 文章的缩略图会显示在归档页面和最新文章挂件中。 如果你在front-matter中使用的是图片的路径，你需要确保它是绝对或者相对于你的source目录的路径。 例如，为使用&lt;your blog&gt;/source/gallery/image.jpg作为缩略图，你需要在front-matter中使用/gallery/image.jpg作为图片路径。 文章阅读时间你可以将article部分的readtime设置为true来显示文章字数统计以及预计阅读时间。 _config.icarus.yml12article: readtime: true 文章更新时间若要显示文章的更新时间，请在文章的front_matter中设置updated时间： post.md1234title: Icarus快速上手updated: 2020-04-01 00:00:00---Post content... 然后，将主题配置文件的article部分的update_time设置为true： _config.icarus.yml12article: update_time: true 你也可以将update_time设置为false来隐藏所有文章的更新时间，或设置为auto而在文章的更新时间 与发布时间相同时隐藏更新时间。 文章许可协议你可以在你的文章/页面的底部展示你的作品的使用许可，许可链接可以是文字或者图标。 这里的配置与导航栏或者页脚的links配置一致： _config.icarus.yml1234567article: # 文章许可协议 licenses: Creative Commons: icon: fab fa-creative-commons url: 'https://creativecommons.org/' 'CC BY-NC-SA 4.0': 'https://creativecommons.org/licenses/by-nc-sa/4.0/' 侧边栏设置sidebar中某个侧边栏的sticky为true来让它的位置固定而不跟随页面滚动。 _config.icarus.yml12345sidebar: left: sticky: false right: sticky: true 其他配置你可以参考Icarus用户指南来了解更多第三方的插件、挂件、以及CDN提供商的配置。 配置文件与优先级除了在_config.icarus.yml的默认主题配置文件外，Icarus也会从如下位置获取替代配置： 位于_config.yml的站点配置文件 位于_config.post.yml和_config.page.yml的布局配置文件 文章/页面的front-matter (已弃用) 位于themes/icarus/_config.yml的旧主题配置文件 (已弃用) 位于themes/icarus/_config.post.yml和themes/icarus/_config.page.yml的旧布局配置文件 布局配置文件布局配置文件遵循着与主题配置文件相同的格式和定义。 _config.post.yml中的配置对所有文章生效，而_config.page.yml中的配置对所有自定义页面生效。 这两个文件将覆盖主题配置文件中的配置。 例如，你可以在_config.post.yml中把所有文章变为两栏布局： _config.post.yml12345678910widgets: - type: recent_posts position: left - type: categories position: left - type: tags position: left 同时所有其他页面仍保持三栏布局： _config.icarus.yml12345678910widgets: - type: recent_posts position: left - type: categories position: right - type: tags position: right 文章/页面的Front-matter如果你只想要在某个文章/页面中覆盖主题配置，你可以在那个文章/页面的front-matter中写下配置。 例如，你可以像下面这样在一篇文章的front-matter中更改某篇文章的代码高亮主题： source/_post/some-post.md1234567title: 我的第一篇文章date: '2015-01-01 00:00:01'article: highlight: theme: atom-one-dark---# 文章标题 上面的配置会为那篇文章覆盖掉_config.post.yml和_config.icarus.yml中的article.highlight。 这种层次化的配置系统对于页面个性化和不同访客间的差异化优化十分有效。 比如，你可以为根据你页面目标访客的国家和语言来开启更快的CDN或本地化的评论服务。 然而需要注意的是，一些Hexo定义的文章或页面属性不会覆盖掉其他配置源中的同名配置，如 title, date, updated, comments (not comment), layout, source, photos, 和excerpt。 站点配置文件上面列出的所有配置源，包括主题配置文件，布局配置文件，和文章/页面的front-matter，会覆盖掉站点配置文件中Icarus使用到的配置。 例如，_config.icarus.yml中的title设置会覆盖掉_config.yml中的title，但new_post_name却不会，因为 Icarus没有用到这个配置项。 另外，主题配置文件中的theme_config选项会与主题配置文件中的主题配置合并并覆盖掉同名配置。 然而，我们非常不推荐使用这个配置选项。 总结总而言之，配置源的作用范围和优先级如下： 对于某个文章或页面 文章/页面的front-matter覆盖所有下面的配置源。 布局配置文件覆盖所有下面的配置源。 站点配置文件中的theme_config选项覆盖所有下面的配置源。 主题配置文件覆盖所有下面的配置源。 站点配置文件。 对于所有的文章或页面 布局配置文件覆盖所有下面的配置源。 站点配置文件中的theme_config选项覆盖所有下面的配置源。 主题配置文件覆盖所有下面的配置源。 站点配置文件。 对于所有的文章，页面，和索引页 站点配置文件中的theme_config选项覆盖所有下面的配置源。 主题配置文件覆盖所有下面的配置源。 站点配置文件。 配置生成与校验所有的Icarus主题配置均使用YAML语言编写。 如果配置文件不存在，Icarus会通过一系列JSON Schema来自动生成默认的配置文件_config.icarus.yml。 这也是为什么你在主题目录下找不到示例配置文件(如_config.yml.example)。 大多数的JSON Schema存放在&lt;icarus_directory&gt;/include/schema目录下，而其他的则存放在 ppoffice/hexo-component-inferno仓库中。 你可以在你的hexo命令后附上--icarus-dont-generate-config来避免配置文件的自动生成。 当你每次运行hexo命令时，主题也会对比JSON Schema来校验你的配置文件。 如果校验中出现任何错误，Icarus会将错误位置与错误类型打印在屏幕上。 例如，如下的错误信息告诉我们logo配置值应该为字符串或是对象，而不是一个整型数。 你可以在你的hexo命令后附上--icarus-dont-check-config来跳过校验，但并不推荐这么做。 hexo日志1234567891011121314INFO === Checking package dependencies ===INFO === Checking the configuration file ===WARN Configuration file failed one or more checks.WARN Icarus may still run, but you will encounter unexcepted results.WARN Here is some information for you to correct the configuration file.WARN [ { keyword: 'type', dataPath: '.logo', schemaPath: '#/properties/logo/type', params: { type: 'string,object' }, message: 'should be string,object' }] 此外，如果你的默认主题配置文件不是最新版本的话，Icarus会运行迁移脚本将它升级到最新版本。 这些脚本存放在&lt;icarus_directory&gt;/include/migration目录。 你可以在你的hexo命令后附上--icarus-dont-upgrade-config来禁止配置升级。 最后，Icarus也会检查主题依赖的Node.js库是否安装并提醒你安装缺失的库。 文章内容有误？请点击此处提交修改。","link":"/Configuration/icarus%E7%94%A8%E6%88%B7%E6%8C%87%E5%8D%97-%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/"},{"title":"Icarus用户指南 - 赞赏按钮","text":"本文介绍Icarus 5支持的赞赏按钮的安装配置。 若需同时展示多个按钮，只需像如下这样在主题配置的donates数组中添加多个按钮配置： _config.icarus.yml1234567donates: - type: ... # 按钮1 ... - type: ... # 按钮2 ... 本文同时提供以下语言的翻译：English。 下面的赞赏按钮由ppoffice/hexo-component-inferno提供，完整的支持按钮列表和配置详情以其为准。 .content ol:not([type]) { list-style-type: simp-chinese-informal; } 爱发电安装指南 注册爱发电并复制个人页面的地址。 将如下配置添加到主题配置中： _config.icarus.yml12345donates: - type: afdian # 个人赞助页面的地址 url: /path/to/afdian/personal/page 支付宝安装指南 登录支付宝并导出个人支付二维码图片。 将二维码图片保存到你的Hexo网站的附件文件夹下，或将它上传至图床。 向主题配置中添加如下配置： _config.icarus.yml12345donates: - type: alipay # 支付宝二维码图片地址 qrcode: /path/to/alipay/qrcode.png Buy me a Coffee安装指南 注册Buy me a Coffee并复制个人页面的地址。 将如下配置添加到主题配置中： _config.icarus.yml12345donates: - type: buymeacoffee # 个人赞助页面的地址 url: /path/to/buymeacoffee/personal/page Paypal安装指南 登录Paypal，点击此处来创建一个Paypal捐赠按钮。 在“选择按钮样式”(Choose button style)页面选择“国家/地区”(Country/Region)和“语言”(Language)，点击“继续”(Continue) 进入下一页面。 在“添加机构详情”(Add organization details)页面中，选择“使用账号ID”(Use account ID)或“使用Email地址”(Use email address) 作为唯一账号标识符。 然后点击“继续”(Continue)进入下一页面。 在“设置捐赠数额”(Set donation amounts)页面选择“接收的货币种类”(Currency you’ll receive donations in)，捐赠数额选择 “任意数额”(Any amount)。 此捐赠按钮暂不支持“指定数额”的捐赠选项。 点击“结束并获取代码”(Finish and Get Code)按钮进入下一页面。 从“按钮HTML代码”(Button HTML)页面中复制business和currency_code两项的值。 将它们填写到主题配置的business和currency_code设置中。 例如，下方的Paypal捐赠按钮代码： Paypal按钮HTML代码123456&lt;form action=&quot;https://www.paypal.com/cgi-bin/webscr&quot; ...&gt;&lt;input type=&quot;hidden&quot; name=&quot;cmd&quot; value=&quot;_donations&quot; /&gt;&lt;input type=&quot;hidden&quot; name=&quot;business&quot; value=&quot;XXXXXXXXXXXXX&quot; /&gt;&lt;input type=&quot;hidden&quot; name=&quot;currency_code&quot; value=&quot;USD&quot; /&gt;...&lt;/form&gt; 对应的主题配置为: _config.icarus.yml12345donates: - type: paypal business: XXXXXXXXXXXXX currency_code: USD Patreon安装指南 注册Patreon并复制个人页面的URL地址。 将如下配置添加到主题配置中： _config.icarus.yml12345donate: - type: patreon # 个人赞助页面的地址 url: /path/to/patreon/personal/page 微信安装指南 登录微信并导出个人支付二维码图片。 将二维码图片保存到你的Hexo网站的附件文件夹下，或将它上传至图床。 向主题配置中添加如下配置： _config.icarus.yml12345donates: - type: wechat # 微信二维码图片地址 qrcode: /path/to/wechat/qrcode.png 文章内容有误？请点击此处提交修改。","link":"/Plugins/Donation/icarus%E7%94%A8%E6%88%B7%E6%8C%87%E5%8D%97-%E8%B5%9E%E8%B5%8F%E6%8C%89%E9%92%AE/"},{"title":"常见问题","text":"本文解答了一些Icarus常见问题。 如果你的问题没有在这里得到解答，也请阅读 Icarus用户指南， Hexo中文文档， 以及GitHub Issues。 此外，你也可以在GitHub讨论组上向其他Icarus用户请求帮助。 本文同时提供以下语言的翻译：English。 站点 我无法生成我的站点。 / 我在生成站点时遇到错误。 Icarus 5运行在Node.js 12.4.0或更新的版本上。 它同时依赖Hexo 6.0.0或更高版本。 除此之外，请确保所有的Node.js依赖已安装。 你可以在&lt;icarus_directory&gt;/package.json 文件的dependencies部分下找到这些依赖。 同时，从你的站点中移除所有无用的Node.js依赖，否则它们可能会导致Icarus出现奇怪的问题。 如何更改我的站点的语言？ 打开站点根目录下的站点配置文件_config.yml，修改如下设置： _config.yml12- language: en+ language: &lt;语言名&gt; 你可以在&lt;icarus_directory&gt;/languages目录下找到所有可用的翻译。 &lt;语言名&gt;为不带后缀名的翻译文件名。 布局 我如何改变页面的宽度？我如何使用单栏/双栏/三栏布局？ 如要改变页面的宽度，编辑&lt;icarus_directory&gt;/include/style/responsive.styl这个样式文件。 此文件定义了不同屏幕尺寸下的页面容器宽度。 如要改变挂件或主内容宽度，编辑&lt;icarus_directory&gt;/layout/common/widgets.jsx和&lt;icarus_directory&gt;/layout/layout.jsx。 在这些文件中找到诸如is-12，is-8-tablet，和is-4-widescreen这样的CSS类名。 CSS类名中的数字标志着一个挂件或主内容所占据的栏数量。 数字后的屏幕尺寸，如tablet和widescreen，指代着栏数量生效的屏幕尺寸条件。 修改类名中的数字使主内容栏的栏数量和所有挂件栏的栏数量在相同屏幕尺寸下相加等于12。 例如，为使主内容栏在宽屏(widescreen)下更宽，你可以做出如下修改： &lt;icarus_directory&gt;/layout/layout.jsx >folded12345678 &lt;div class={classname({ column: true, 'order-2': true, 'column-main': true, 'is-12': columnCount === 1,- 'is-8-tablet is-8-desktop is-8-widescreen': columnCount === 2,+ 'is-8-tablet is-8-desktop is-9-widescreen': columnCount === 2, 'is-8-tablet is-8-desktop is-6-widescreen': columnCount === 3 &lt;icarus_directory&gt;/layout/common/widgets.jsx >folded1234567 function getColumnSizeClass(columnCount) { switch (columnCount) { case 2:- return 'is-4-tablet is-4-desktop is-4-widescreen';+ return 'is-4-tablet is-4-desktop is-3-widescreen'; case 3: return 'is-4-tablet is-4-desktop is-3-widescreen'; 你可以参考Bulma文档来获取更多关于布局系统的细节。 下面时一些创建单栏/双栏/三栏布局的提示： 你可以从主题配置中移除所有的挂件来创建单栏布局。 你可以将所有的挂件移动到页面的一侧来创建双栏布局。 你可以将挂件放在页面两边来创建三栏布局。 若要更改单个文章或页面的布局，请参考配置文件与优先级。 挂件/评论插件/分享按钮...的布局文件在哪里？我如何个性化内置的挂件/评论插件/分享按钮...？ 插件和挂件的布局文件已被移至一个单独的Node.js库中——hexo-component-inferno。 这样，主题开发者可以更好地在不同主题之间复用这些通用组件，并且普通用户可以更简便地覆盖这些内置组件。 若要自定义这些组件，从hexo-component-inferno仓库中拷贝布局文件并把它们放入&lt;icarus_directory&gt;/layout下的的相应目录中。 例如，如果你想要自定义Valine评论插件，你可以从hexo-component-inferno仓库中拷贝 src/view/comment/valine.jsx 到&lt;icarus_directory&gt;/layout/comment/valine.jsx。 同时像下面这样改正此文件头部的一些Node.js引用： &lt;icarus_directory&gt;/layout/comment/valine.jsx12- const { cacheComponent } = require('../../util/cache');+ const { cacheComponent } = require('hexo-component-inferno/lib/util/cache'); 最后，用hexo clean清理你的站点并重新生成HTML文件。 类似的，你可以用同样的方式覆盖主题内置的静态文件，如 asset/js/insight.js 。 为什么我的改变的布局文件在我刷新页面时没有生效（假设我正在使用hexo server）？ 当你使用hexo server启动本地Hexo服务器时，Icarus会缓存布局文件。 如要使布局文件的修改生效，请重启本地服务器。 其他情况下临时生成的数据会被Hexo缓存在内存或者db.json数据库中。 在运行hexo server或hexo generate之前执行hexo clean应该可以解决此问题。 内容 我的图片没有正确显示。 / 我的图片仅在首页显示，却无法在文章页面显示。 请确保你使用了图片的绝对路径。 例如，你的站点位于你域名的子目录下，如https://ppoffice.github.io/hexo-theme-icarus， 并且你的图片image.jpg放在了source/gallery/目录下。 那么你应该用/hexo-theme-icarus/gallery/image.jpg来引用你的图片。 你也可以像下面这样使用{% img %}这个Hexo标签来自动引用图片： 1{% img /gallery/image.jpg &quot;Image title&quot; %} 在这种情况下，你可以从图片路径中省略网站子目录。 你可以参考Hexo文档来了解更多详情。 如何为文章添加摘要？如何显示“阅读更多”按钮？ 在你的文章中添加&lt;!-- more --&gt;标签。 标签前面的文章内容会被标记为摘要，而其后的内容不会显示在文章列表上。 你也可以在文章的front-matter中设置自定义摘要。 some-post.md12345title: 一篇文章date: 2020-01-01excerpt: 这是一篇关于...---# 文章内容... 我如何加密文章？ 使用如hexo-blog-encrypt这样的第三方的Hexo插件。 我如何像这篇文章一样使用炫酷的页面元素？ 请参考Bulma文档来了解所有可选的元素和样式。 复制其中的HTML代码段并直接放入你的Markdown文件中。 挂件与插件 我如何才能移除页面上警告我一些配置值没有设置的红色警示信息？ 这些警示信息通常在你遗漏一些插件或挂件的配置设置时出现。 如果你不想开启某个插件或挂件，把它们从你的主题配置中删掉或注释掉。 例如，注释掉这几行来禁用掉评论插件： _config.icarus.yml123456- comment:- type: disqus- shortname: + # comment:+ # type: disqus+ # shortname: 文章内容有误？请点击此处提交修改。","link":"/uncategorized/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/"},{"title":"Icarus快速上手","text":"欢迎使用Icarus！ Icarus是静态网站生成器Hexo的一款简单，精致，而现代的主题。 它力求设计上的优雅，但也不抛弃使用上的简单明了。 它灵活且多功能的配置系统让资深用户也能极尽细节地装饰他们的站点。 Icarus同时也提供了超多插件与挂件来满足你的多元的站点个性化和优化需求。 除此以外，它的崭新实现使得更好的IDE支持和第三方接入成为可能，并提供了更多未来的优化空间。 本文同时提供以下语言的翻译： English. 在你继续安装Icarus之前，请先花些时间阅览Hexo文档。 如要安装Icarus，你可以选择如下两种方式中的任意一种： 从源码安装 使用NPM安装 从GitHub的仓库中下载源码的压缩包并解压到你Hexo站点的主题目录中。 或者，你可以使用Git来克隆Icarus的代码仓库到themes目录下： Git Bash/命令行1git clone https://github.com/ppoffice/hexo-theme-icarus.git themes/icarus -b &lt;version number&gt; --depth 1 你可以省略-b &lt;version number&gt;来获取Icarus的最新开发版本。 如果你想同时下载Git仓库的完整提交历史，请同时省略--depth 1。 另外，你也可以使用下面的命令将Icarus安装为Git子模块(submodule)： Git Bash/命令行1git submodule add https://github.com/ppoffice/hexo-theme-icarus.git themes/icarus 若要使用NPM将Icarus安装为Node包，在你的Hexo站点根目录运行如下命令： 命令行1npm install -S hexo-theme-icarus hexo-renderer-inferno 接下来，在你的站点的_config.yml文件中的开启Icarus： _config.yml1theme: icarus 或使用hexo命令修改主题为Icarus: 命令行1hexo config theme icarus 最后，使用如下命令来启动Hexo本地测试服务器并开始创作。 命令行1hexo server 如需了解更多主题、挂件、和插件相关的信息，请查看 Icarus用户指南。 你也可以参考本站的源代码来获取更多的使用示例。 本站源代码位于GitHub上Icarus代码仓库的site分支。 此外，你也可能在GitHub讨论组上获得其他Icarus用户的帮助。 额外资源 下面是一些帮助你进一步个性化你的站点的其他资源。 你也可以点击此处来提交你的Icarus教程。 Hexo中文文档 博客源码分享 by 辣椒の酱 hexo-theme-icarus 3 食用经验分享 by iMaeGoo 活用 Bulma 美化 Icarus 文章 by iMaeGoo icarus主题自定义 by kuzen Icarus4主题自定义记录 by BlakeNeko Icarus 主题自定义 by AlphaLxy 文章内容有误？点击此处提交修改。 unsplash-logo王希孟 千里江山图卷","link":"/uncategorized/icarus%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B/"},{"title":"Icarus用户指南 - 其他插件","text":"本文介绍Icarus 5支持的其他插件的安装配置。 本文同时提供以下语言的翻译：English。 下面的插件由ppoffice/hexo-component-inferno提供，完整的支持插件列表和配置详情以其为准。 画廊安装指南 Icarus的画廊插件同时包含了lightGallery与 Justified Gallery两种插件。 若要启用画廊插件，请将主题配置中plugins &gt; gallery的值设置为true。 _config.icarus.yml12plugins: gallery: true 此外，若要使用Justified Gallery，请将你的图片包裹在&lt;div class=&quot;justified-gallery&quot;&gt;与&lt;/div&gt;的HTML标签对中。 并且如果你使用的是Markdown语法来引用图片的话，请在HTML标签和Markdown之间添加空行。 例如，下方画廊预览的Markdown代码为： Justified-Gallery-Markdown.md >folded12345678910&lt;div class=&quot;justified-gallery&quot;&gt;![Elephant](/hexo-theme-icarus/gallery/animals/elephant.jpeg)![Dog](/hexo-theme-icarus/gallery/animals/dog.jpeg)![Birds](/hexo-theme-icarus/gallery/animals/birds.jpeg)![Fox](/hexo-theme-icarus/gallery/animals/fox.jpeg)![Horse](/hexo-theme-icarus/gallery/animals/horse.jpeg)![Leopard](/hexo-theme-icarus/gallery/animals/leopard.jpeg)&lt;/div&gt; 同样，我们也可使用纯HTML来创建Justified Gallery。 这种情况下HTML标签之间就不需要添加空行了： Justified-Gallery-HTML.md >folded12345678&lt;div class=&quot;justified-gallery&quot;&gt;&lt;img src=&quot;/hexo-theme-icarus/gallery/animals/elephant.jpeg&quot; alt=&quot;Elephant&quot; /&gt;&lt;img src=&quot;/hexo-theme-icarus/gallery/animals/dog.jpeg&quot; alt=&quot;Dog&quot; /&gt;&lt;img src=&quot;/hexo-theme-icarus/gallery/animals/birds.jpeg&quot; alt=&quot;Birds&quot; /&gt;&lt;img src=&quot;/hexo-theme-icarus/gallery/animals/fox.jpeg&quot; alt=&quot;Fox&quot; /&gt;&lt;img src=&quot;/hexo-theme-icarus/gallery/animals/horse.jpeg&quot; alt=&quot;Horse&quot; /&gt;&lt;img src=&quot;/hexo-theme-icarus/gallery/animals/leopard.jpeg&quot; alt=&quot;Leopard&quot; /&gt;&lt;/div&gt; 效果预览 下面是Justified Gallery实现的图片网格。 你也可以点击其中的任意图片查看lightGallery的全图展示效果。 下面的图片来源于pexel.com KaTeX安装指南 你可以使用KaTeX插件来渲染\\(\\TeX\\)数学公式。 若要启用KaTeX插件，请将主题配置中plugins &gt; katex的值设置为true。 _config.icarus.yml12plugins: katex: true 请使用\\\\(和\\\\)包裹你的行内公式，使用$$或\\\\[与\\\\]标签对包裹块状公式。 例如： Some-Post.md >folded123456789这是一个行内公式：\\\\(ax^2+bx+c=0\\\\)。这是一个块状公式：$$\\displaystyle \\frac{1}{\\Bigl(\\sqrt{\\phi \\sqrt{5}}-\\phi\\Bigr) e^{\\frac25 \\pi}} = 1+\\frac{e^{-2\\pi}} {1+\\frac{e^{-4\\pi}} {1+\\frac{e^{-6\\pi}} {1+\\frac{e^{-8\\pi}} {1+\\cdots} } } }$$这是另一个块状公式：\\\\[f(x) = \\int_{-\\infty}^\\infty\\hat f(\\xi)e^{2 \\pi i \\xi x}d\\xi\\\\] 有时你的\\(\\TeX\\)语法会被错认为Markdown语法而导致公式渲染异常。 例如，下面的公式不会渲染成功，因为其中包含多个_(下划线)而被Markdown渲染器错误的认成Markdown的斜体字语法： Some-Post.md123$$\\hat{x}_{k}=\\hat{x}_{k}^{-}+K_{t}\\left(y_{k}\\right)$$ 在这种情况下，你可以选择转义每个可能导致歧义的字符： Some-Post.md123$$\\hat{x}\\_{k}=\\hat{x}\\_{k}^{-}+K\\_{t}\\left(y\\_{k}\\right)$$ 或是简单地将整个公式用一个额外的HTML标签对包裹起来： Some-Post.md12345&lt;div&gt;$$\\hat{x}_{k}=\\hat{x}_{k}^{-}+K_{t}\\left(y_{k}\\right)$$&lt;/div&gt; MathJax安装指南 你可以使用MathJax插件来渲染\\(\\TeX\\)，MathML，或AsciiMath数学公式。 若要启用MathJax插件，请将主题配置中plugins &gt; mathjax的值设置为true。 _config.icarus.yml12plugins: mathjax: true 当使用\\(\\TeX\\)语法时，请使用$或\\\\(与\\\\)包裹行内公式，$$或\\\\[与\\\\]标签对包裹块状公式。 或者使用\\(\\LaTeX\\)环境。例如： Tex-Example.md >folded123456789101112131415161718这是一个行内公式：\\\\(ax^2+bx+c=0\\\\)。这是另一个行内公式：$ax^2+bx+c&gt;0$。这是一个块状公式：$$\\displaystyle \\frac{1}{\\Bigl(\\sqrt{\\phi \\sqrt{5}}-\\phi\\Bigr) e^{\\frac25 \\pi}} = 1+\\frac{e^{-2\\pi}} {1+\\frac{e^{-4\\pi}} {1+\\frac{e^{-6\\pi}} {1+\\frac{e^{-8\\pi}} {1+\\cdots} } } }$$这是另一个块状公式：\\\\[f(x) = \\int_{-\\infty}^\\infty\\hat f(\\xi)e^{2 \\pi i \\xi x}d\\xi\\\\]或者使用\\\\(\\LaTeX\\\\)环境：\\\\begin{equation}A =\\\\begin{bmatrix} a &amp; b \\\\\\\\ c &amp; c\\\\end{bmatrix}\\\\end{equation} 或者直接使用MathML语法。例如： MathML-Example.md >folded1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950当&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt; &lt;mi&gt;a&lt;/mi&gt; &lt;mo&gt;≠&lt;/mo&gt; &lt;mn&gt;0&lt;/mn&gt;&lt;/math&gt;，方程&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt; &lt;mi&gt;a&lt;/mi&gt; &lt;msup&gt; &lt;mi&gt;x&lt;/mi&gt; &lt;mn&gt;2&lt;/mn&gt; &lt;/msup&gt; &lt;mo&gt;+&lt;/mo&gt; &lt;mi&gt;b&lt;/mi&gt; &lt;mi&gt;x&lt;/mi&gt; &lt;mo&gt;+&lt;/mo&gt; &lt;mi&gt;c&lt;/mi&gt; &lt;mo&gt;=&lt;/mo&gt; &lt;mn&gt;0&lt;/mn&gt;&lt;/math&gt; 有两个解，它们是&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot; display=&quot;block&quot;&gt; &lt;mi&gt;x&lt;/mi&gt; &lt;mo&gt;=&lt;/mo&gt; &lt;mrow&gt; &lt;mfrac&gt; &lt;mrow&gt; &lt;mo&gt;-&lt;/mo&gt; &lt;mi&gt;b&lt;/mi&gt; &lt;mo&gt;±&lt;/mo&gt; &lt;msqrt&gt; &lt;msup&gt; &lt;mi&gt;b&lt;/mi&gt; &lt;mn&gt;2&lt;/mn&gt; &lt;/msup&gt; &lt;mo&gt;-&lt;/mo&gt; &lt;mn&gt;4&lt;/mn&gt; &lt;mi&gt;a&lt;/mi&gt; &lt;mi&gt;c&lt;/mi&gt; &lt;/msqrt&gt; &lt;/mrow&gt; &lt;mrow&gt; &lt;mn&gt;2&lt;/mn&gt; &lt;mi&gt;a&lt;/mi&gt; &lt;/mrow&gt; &lt;/mfrac&gt; &lt;/mrow&gt; &lt;mtext&gt;.&lt;/mtext&gt;&lt;/math&gt; 同样地，你也可以使用MathJax支持的AsciiMath。 公式需包裹在\\`内。 AsciiMath-Example.md >folded1当\\`a != 0\\`，方程\\`ax^2 + bx + c = 0\\`有两个解，它们是&lt;p style=&quot;text-align:center&quot;&gt;\\`x = (-b +- sqrt(b^2-4ac))/(2a)\\`.&lt;/p&gt; 有时你的\\(\\TeX\\)语法会被错认为Markdown语法而导致公式渲染异常。 请参照KaTeX一节来查看解决方案。 效果预览(\\(\\TeX\\) &amp; \\(\\LaTeX\\)) 这是一个行内公式：\\(ax^2+bx+c=0\\)。这是另一个行内公式：$ax^2+bx+c&gt;0$。 这是一个块状公式： $$\\displaystyle \\frac{1}{\\Bigl(\\sqrt{\\phi \\sqrt{5}}-\\phi\\Bigr) e^{\\frac25 \\pi}} = 1+\\frac{e^{-2\\pi}} {1+\\frac{e^{-4\\pi}} {1+\\frac{e^{-6\\pi}} {1+\\frac{e^{-8\\pi}} {1+\\cdots} } } }$$ 这是另一个块状公式： \\[f(x) = \\int_{-\\infty}^\\infty\\hat f(\\xi)e^{2 \\pi i \\xi x}d\\xi\\] 或者使用\\(\\LaTeX\\)环境： \\begin{equation} A = \\begin{bmatrix} a &amp; b \\\\ c &amp; c \\end{bmatrix} \\end{equation} 效果预览(MathML) 当 a ≠ 0 ， 方程 a x 2 + b x + c = 0 有两个解，它们是 x = - b ± b 2 - 4 a c 2 a . 效果预览(AsciiMath) 当`a != 0`，方程`ax^2 + bx + c = 0`有两个解，它们是`x = (-b +- sqrt(b^2-4ac))/(2a)`. Cookie同意提示安装指南 你可以通过启用Cookie同意提示插件来向你的访客展示Cookie同意对话框。 请参考下载Cookie Consent和Cookie Consent插件文档来了解每个配置项的细节。 你也可以通过注释掉配置的方式来禁用Cookie同意对话框。 _config.icarus.yml123456789101112plugins: cookie_consent: # 同意对话框类型。可以为&quot;info&quot;，&quot;opt-in&quot;，或&quot;opt-out&quot; type: info # 弹出框主题。可以为&quot;block&quot;，&quot;edgeless&quot;，或&quot;classic&quot; theme: edgeless # 是否使弹出框固定，不随页面滚动而滚动 static: false # 弹出框在屏幕上的位置 position: bottom-left # 你网站的Cookie协议的URL policyLink: 'https://www.cookiesandyou.com/' 浏览器升级提醒 (Outdated Browser)安装指南 你可以使用浏览器升级提醒(Outdated Browser)插件来检测你的网站访客使用的老旧浏览器，并提醒他们升级浏览器。 若要启用此插件，请将主题配置中plugins &gt; outdated_browser的值设置为true。 点击此处即可预览插件开启效果。 _config.icarus.yml12plugins: outdated_browser: true 网页载入动画安装指南 Icarus默认启用网页载入动画。 若需禁止载入动画，请在你的主题配置中将plugins &gt; animejs设置为false。 _config.icarus.yml12plugins: animejs: false 另外，若需禁用网页载入进度条，请在你的主题配置中将plugins &gt; progressbar设置为false。 _config.icarus.yml12plugins: progressbar: false 文章内容有误？请点击此处提交修改。","link":"/Plugins/Other/icarus%E7%94%A8%E6%88%B7%E6%8C%87%E5%8D%97-%E5%85%B6%E4%BB%96%E6%8F%92%E4%BB%B6/"},{"title":"Icarus用户指南 - 站内搜索插件","text":"本文介绍Icarus 5支持的站内搜索插件的安装配置。 本文同时提供以下语言的翻译：English。 下面的站内搜索插件由ppoffice/hexo-component-inferno提供，完整的支持插件列表和配置详情以其为准。 .content ol:not([type]) { list-style-type: simp-chinese-informal; } Algolia 安装指南 在线预览 在Hexo站点的根目录安装hexo-algolia插件。 注册并登录Algolia。 首次登录控制面板(Dashboard)时点击页面上的“创建索引”(Create Index)按钮。 然后，输入”索引名称“(Index name)并点击“创建”(Create)完成索引创建。 下一步，点击右侧导航栏上的”API密钥“(API Keys)，复制页面上的“应用ID”(Application ID)和“仅限搜索的API Key” (Search-Only API Key)。 打开Hexo站点根目录下的站点配置文件_config.yml，填入上面复制的信息到hexo-algolia插件的配置中。 例如，下面的Algolia索引信息： Algolia索引信息123Algolia索引名称: My-Hexo-SiteApplication ID: ABCDEFGHIJKLSearch-Only API Key: 7b08fca7d42412cee901a25643124221 对应的站点配置为： _config.yml1234algolia: applicationID: My-Hexo-Site indexName: ABCDEFGHIJKL apiKey: 7b08fca7d42412cee901a25643124221 回到Algolia控制面板的”API密钥“(API Keys)页面并切换到“所有API Keys”(All API Keys)标签页。 点击“新建API Key”(New API Key)按钮。 在弹出的“创建API Key”(Create API Key)对话框中，在”索引“(Indices)处选择你在上一步中创建的“索引”(Indices)。 然后，“ACL”项中添加addObject，deleteObject，listIndexes， deleteIndex。 点击“创建”(Create)完成密钥的创建。 复制刚刚创建的API Key，例如727fbd8c998fe419318fa350db6793ca。 打开一个Windows命令行(CMD)或Linux/macOS终端并切换当前目录到你的Hexo站点的根目录。 设置环境变量HEXO_ALGOLIA_INDEXING_KEY为上一步中创建的API Key。 hexo-algolia插件上传网站索引时会用到这个变量。 Windows下： Windows命令行(CMD)12C:\\Users\\you&gt; cd path/to/your/hexo/siteC:\\Users\\you&gt; set HEXO_ALGOLIA_INDEXING_KEY=727fbd8c998fe419318fa350db6793ca Linux/macOS下： Linux/macOS终端12$ cd path/to/your/hexo/site$ export HEXO_ALGOLIA_INDEXING_KEY=&quot;727fbd8c998fe419318fa350db6793ca&quot; 然后，运行下面的命令来清理站点并上传网站索引到Algolia： Windows命令行(CMD)或Linux/macOS终端12$ hexo clean$ hexo algolia 最后，在主题配置中设置搜索引擎为Algolia： _config.icarus.yml12search: type: algolia 百度搜索安装指南 打开主题配置文件并设置搜索为百度搜索： _config.icarus.yml12search: type: baidu 谷歌自定义搜索 安装指南 在线预览 登录你的谷歌账户并访问Google CSE来创建自定义搜索。 在“需要搜索的站点”(Sites to Search)中填入你的Hexo站点域名。 在“语言”(Language)选择框中选择正确的语言。 然后填写自定义“搜索引擎名称”(Name of the search engine)。 点击“创建”(Create)按钮完成引擎的创建。 然后，点击页面上的“添加到你的站点”(Add it to your site)右侧的“获取代码”(Get code)按钮。 从HTML代码中复制cx的值填入到对应主题配置项中。 例如，下面的HTML代码： Google CSE HTML代码12&lt;script async src=&quot;https://cse.google.com/cse.js?cx=012345601234560123456:abcdefghijklmn&quot;&gt;&lt;/script&gt;&lt;div class=&quot;gcse-search&quot;&gt;&lt;/div&gt; 对应下面的主题配置： _config.icarus.yml123search: type: google_cse cx: 012345601234560123456:abcdefghijklmn Insight安装指南 Insight为本站默认的站内搜索引擎。 你可以通过下面的主题配置来启用它： _config.icarus.yml123search: type: insight include_pages: true # 可选项。设置为false时从搜索结果中排除所有page 文章内容有误？请点击此处提交修改。","link":"/Plugins/Search/icarus%E7%94%A8%E6%88%B7%E6%8C%87%E5%8D%97-%E7%AB%99%E5%86%85%E6%90%9C%E7%B4%A2%E6%8F%92%E4%BB%B6/"},{"title":"Icarus用户指南 - 分享按钮","text":"本文介绍Icarus 5支持的分享按钮的安装配置。 本文同时提供以下语言的翻译：English。 下面的分享按钮由ppoffice/hexo-component-inferno提供，完整的支持按钮列表和配置详情以其为准。 .content ol:not([type]) { list-style-type: simp-chinese-informal; } AddThis 此分享按钮可能会被部分广告拦截浏览器扩展拦截，请酌情使用。 AddThis分享按钮服务已下线，建议使用其他分享按钮服务作为替代。 安装指南 在线预览 注册AddThis。 在提交注册表单后的“选择工具”(Select a Tool)页面选择“分享按钮”(Share Buttons)。 在“选择工具类型”(Select a Tool Type)界面选择样式和按钮，点击“继续”(Continue)。 在下一页面中进一步自定义分享按钮，完成时点击“激活工具”(Activate Tool)按钮。 在”获取代码“(Get The Code)页面找到HTML代码，复制src属性值中的URL地址并填入分享按钮配置中。 例如，下面AddThis代码中的URL： AddThis代码12&lt;!-- Go to www.addthis.com/dashboard to customize your tools --&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-xxxxxxxxxxxxx&quot;&gt;&lt;/script&gt; 对应如下的主题配置： _config.icarus.yml123share: type: addthis install_url: //s7.addthis.com/js/300/addthis_widget.js#pubid=ra-xxxxxxxxxxxxx AddToAny 安装指南 在线预览 你可以启用AddToAny而无需注册用户。 仅需将下面的代码放到你的主题配置中： _config.icarus.yml12share: type: addtoany 如果你想自定义分享按钮，请采用如下步骤： 访问AddToAny官网并点击“获取分享按钮”(Get the Share Button)。 然后，选择“任意网站”(Any Website)并完成按钮的配置。 完成后点击“获取按钮代码”(Get Button Code)。 由于分享按钮是由ppoffice/hexo-component-inferno 提供，你需要将AddToAny的布局文件src/view/share/addtoany.jsx从这个仓库中复制到&lt;icarus_directory&gt;/layout/share/addtoany.jsx。 然后，替换addtoany.jsx中AddToAny代码并修正文件头部的包引用。 例如，假设下面的代码是你从上一步获得的代码： AddToAny代码 >folded123456789&lt;!-- AddToAny BEGIN --&gt;&lt;div class=&quot;a2a_kit a2a_kit_size_32 a2a_default_style&quot;&gt;&lt;a class=&quot;a2a_dd&quot; href=&quot;https://www.addtoany.com/share&quot;&gt;&lt;/a&gt;&lt;a class=&quot;a2a_button_facebook&quot;&gt;&lt;/a&gt;&lt;a class=&quot;a2a_button_twitter&quot;&gt;&lt;/a&gt;&lt;a class=&quot;a2a_button_email&quot;&gt;&lt;/a&gt;&lt;/div&gt;&lt;script async src=&quot;https://static.addtoany.com/menu/page.js&quot;&gt;&lt;/script&gt;&lt;!-- AddToAny END --&gt; 那么你需要对addtoany.jsx做出如下修改： &lt;icarus_directory&gt;/layout/share/addtoany.jsx >folded123456789101112131415161718192021222324const { Component, Fragment } = require('inferno');- const { cacheComponent } = require('../../util/cache');+ const { cacheComponent } = require('hexo-component-inferno/lib/util/cache');...中间省略部分代码...class AddToAny extends Component { render() { return &lt;Fragment&gt;- &lt;div class=&quot;a2a_kit a2a_kit_size_32 a2a_default_style&quot;&gt;- &lt;a class=&quot;a2a_dd&quot; href=&quot;https://www.addtoany.com/share&quot;&gt;&lt;/a&gt;- &lt;a class=&quot;a2a_button_facebook&quot;&gt;&lt;/a&gt;- &lt;a class=&quot;a2a_button_twitter&quot;&gt;&lt;/a&gt;- &lt;a class=&quot;a2a_button_telegram&quot;&gt;&lt;/a&gt;- &lt;a class=&quot;a2a_button_whatsapp&quot;&gt;&lt;/a&gt;- &lt;a class=&quot;a2a_button_reddit&quot;&gt;&lt;/a&gt;- &lt;/div&gt;+ 刚刚获取的AddToAny HTML代码替换到这里 &lt;script src=&quot;https://static.addtoany.com/menu/page.js&quot; defer={true}&gt;&lt;/script&gt; &lt;/Fragment&gt;; }}...下面省略部分代码... 百度分享 此分享按钮可能会被部分广告拦截浏览器扩展拦截，请酌情使用。 百度分享按钮服务似乎已下线，建议使用其他分享按钮服务作为替代。 安装指南 你可以启用百度分享按钮而无需注册用户。 直接将下面的代码添加到你的主题配置中： _config.icarus.yml12share: type: bdshare Share.js Share.js服务已停止维护，建议使用其他分享按钮服务作为替代。 安装指南 在线预览 你可以启用Share.js分享按钮而无需用户注册。 直接将下面代码添加到主题配置中： _config.icarus.yml12share: type: sharejs (可选)请参照AddToAny部分的个性化步骤与share.js主页 来了解更多关于自定义分享按钮的信息。 ShareThis 安装指南 在线预览 访问ShareThis并点击页面上的“从分享按钮开始”(Start with Share Buttons)按钮。 在“选择分享按钮类型”(Choose type of sharing button)页面选择你需要的按钮类型。 不要启用”GDPR规范工具“，否则可能会导致一些问题。 你也可以点击“自定义你的分享按钮”(Customize your share buttons)链接来进行按钮的进一步配置。 完成后点击“下一步”(Next)。 在”选择你的CMS平台“(Choose your CMS platform)页面选择”HTML“并点击”下一步“(Next)。 在“注册并获取代码”(Register and get the code!)页面输入邮箱和密码完成ShareThis的注册。 最后，从HTML代码段中复制src中的URL地址到分享按钮配置中。 例如，下面的ShareThis代码： AddThis代码1&lt;script type=&quot;text/javascript&quot; src=&quot;https://platform-api.sharethis.com/js/sharethis.js#property=xxxxxxxxxxxxx&amp;product=inline-share-buttons&quot; async=&quot;async&quot;&gt;&lt;/script&gt; 对应下面的主题配置： _config.icarus.yml123share: type: sharethis install_url: https://platform-api.sharethis.com/js/sharethis.js#property=xxxxxxxxxxxxx&amp;product=inline-share-buttons 文章内容有误？请点击此处提交修改。","link":"/Plugins/Share/icarus%E7%94%A8%E6%88%B7%E6%8C%87%E5%8D%97-%E5%88%86%E4%BA%AB%E6%8C%89%E9%92%AE/"},{"title":"升级指南","text":"本文同时提供以下语言的翻译： English. 从5.x升级至6.x 将Node.js升级到14.0或者更新的版本。 下载源代码或者从NPM安装Icarus 6.x。 你可以在Icarus快速上手中找到安装指导。 如果你打算通过修改源代码的方式自定义主题，你必须从源代码安装主题。 运行hexo clean来清理缓存并让Icarus为你升级主题配置文件。 阅读更新说明和最新文档来了解更多新功能的信息。 从4.x升级至5.x 将Node.js升级到12.4.0或者更新的版本。 下载源代码或者从NPM安装Icarus 5.x。 你可以在Icarus快速上手中找到安装指导。 如果你打算通过修改源代码的方式自定义主题，你必须从源代码安装主题。 运行hexo clean来清理缓存并让Icarus为你升级主题配置文件。 阅读更新说明和最新文档来了解更多新功能的信息。 从3.x升级至4.x 将Node.js升级到10.13.0或者更新的版本。 下载源代码或者从NPM安装Icarus 4.x。 你可以在Icarus快速上手中找到安装指导。 如果你打算通过修改源代码的方式自定义主题，你必须从源代码安装主题。 运行hexo clean来清理缓存。 按照Icarus的提示安装缺失的依赖软件包： 命令行123456$ hexo clean...ERROR Please install the missing dependencies your Hexo site root directory:ERROR npm install --save hexo@^5.0.2 hexo-component-inferno@^0.8.2 hexo-log@^2.0.0 hexo-util@^2.2.0ERROR or:ERROR yarn add hexo@^5.0.2 hexo-component-inferno@^0.8.2 hexo-log@^2.0.0 hexo-util@^2.2.0 再次运行hexo clean来让Icarus为你升级主题配置文件。 Icarus会备份并删除themes/icarus/_config.yml文件，然后创建_config.icarus.yml作为新的主题配置文件。 你可以参考_config.icarus.yml.example来了解示例配置. 命令行123456789$ hexo clean...WARN Your theme configuration is outdated (3.0.0 &lt; 4.0.0).INFO To skip the configuration upgrade, use &quot;--icarus-dont-upgrade-config&quot;.INFO Backing up theme configuration files...INFO themes/icarus/_config.yml =&gt; themes/icarus/_config.yml.dc00f8b8f8bc03ede351d711e958dc4bINFO Upgrading theme configurations...INFO Theme configurations are written to /tmp/_config.icarus.yml.INFO Example configurations is at /tmp/_config.icarus.yml.example. Icarus现在将文章的缩略图和封面图区别对待。 对于有缩略图的所有文章/页面，将其front-matter中的thumbnail:更改为cover:。 post.md12345 title: Icarus快速上手 date: 2020-04-01- thumbnail: /gallery/covers/vector_landscape_1.svg+ cover: /gallery/covers/vector_landscape_1.svg--- 你仍可以在front-matter中设置thumbnail来在文章归档页面以及最新文章挂件中显示小一点的缩略图。 阅读更新说明和最新文档来了解更多新功能的信息.","link":"/uncategorized/%E5%8D%87%E7%BA%A7%E6%8C%87%E5%8D%97/"},{"title":"Icarus用户指南 - 网站分析插件","text":"本文介绍Icarus 5支持的网站统计与分析插件的安装配置。 本文同时提供以下语言的翻译：English。 下面的网站统计与分析插件由ppoffice/hexo-component-inferno提供，完整的支持插件列表和配置详情以其为准。 本文中涉及的所有插件均可能被部分广告拦截浏览器扩展拦截，请酌情使用。 百度统计安装指南 登录百度统计。 在“管理 &gt; 网站列表”页面上点击“新增网站”按钮并填写“网站域名”，“网站首页”等站点信息。 点击“确定”完成站点创建。 在下一页面上找到hm.baidu.com/hm.js?后的ID并填写到主题配置的plugins &gt; baidu_analytics &gt; tracking_id值中。 例如，如下的统计代码： 百度统计代码123456789&lt;script&gt;var _hmt = _hmt || [];(function() {var hm = document.createElement(&quot;script&quot;);hm.src = &quot;https://hm.baidu.com/hm.js?3f06f2b732a5b1034c989f74e28d0eea&quot;;var s = document.getElementsByTagName(&quot;script&quot;)[0]; s.parentNode.insertBefore(hm, s);})();&lt;/script&gt; 对应的主题配置为： _config.icarus.yml123plugins: baidu_analytics: tracking_id: 3f06f2b732a5b1034c989f74e28d0eea Bing Webmaster Tools安装指南 登录Bing - Webmaster Tools. 然后，选择“手动添加网站”(Add your site manually)并输入你网站的URL。 点击“添加”(Add)继续。 在“添加并验证网站”(Add &amp; verify site)面板，选择“HTML Meta 标记”(HTML Meta Tag)方法。 复制HTML meta标签中content属性的值到主题配置中的plugins &gt; bing_webmaster &gt; tracking_id下。 _config.icarus.yml123plugins: bing_webmaster: tracking_id: ABCDEFABCDEFABCDEFABCDEFABCDEFABCDEF 不蒜子网页计数器安装指南 将plugins &gt; busuanzi设置为true来开启不蒜子访客计数器并在网页尾部和每篇博文的头部展示访问次数。 _config.icarus.yml12plugins: busuanzi: true CNZZ统计安装指南 登录友盟+。 在友盟+工作台首页点击“创建新应用” &gt; “Web应用”。 然后输入“网站名称”，“网站域名”，“网站首页”等站点信息信息。 完成后点击“确认添加站点”。 在获取统计代码界面找到“文字样式”一栏下的HTML代码。 分别将其中id与web_id的值复制到主题配置的plugins &gt; cnzz &gt; id和web_id中。 例如，如下的统计安装代码： CNZZ统计代码1&lt;script type=&quot;text/javascript&quot; src=&quot;https://s9.cnzz.com/z_stat.php?id=123456789000&amp;web_id=123456789000&quot;&gt;&lt;/script&gt; 对应的主题配置为： _config.icarus.yml1234plugins: cnzz: id: 123456789000 web_id: 123456789000 Google Analytics安装指南 登录Google Analytics并点击左侧的”管理“(Admin)进入管理界面。 在管理界面上点击”创建资产“(Create Property)按钮，选择“测量的应用类型”(What do you want to measure?)为Web。 然后点击”继续“(Continue)按钮。 然后，填写“网站名称”(Website Name)，“URL地址”(Website URL)，“行业分类”(Industry Category)，以及“报告时区” (Reporting Time Zone)等信息。 点击”创建“(Create)按钮完成资产创建。 在”追踪代码“(Tracking Code)界面上找到”Tracking ID”的值，例如”UA-12345678-0”. 将其填写到主题配置的plugins &gt; google_analytics &gt; tracking_id即可开启Google Analytics插件。 _config.icarus.yml123plugins: google_analytics: tracking_id: UA-12345678-0 Hotjar安装指南 登录Hotjar，点击页面左上角的➕(加号) &gt; ”添加新站点“(Add new site)链接。 填写”网站地址“(WEBSITE)，”站点类型“(SITE TYPE)，和”站点所有者“(SITE OWNER)，然后点击”添加站点“(Add Site)按钮。 在重定向到的”站点&amp;组织“(Sites &amp; Organizations)页面找到新建的站点。 点击右侧的”追踪代码“(Tracking Code)按钮。 复制弹出对话框中”Site ID”的值(如”1234567”)到主题配置的plugins &gt; hotjar &gt; site_id来启用Hotjar插件。 _config.icarus.yml123plugins: hotjar: site_id: 1234567 Statcounter安装指南 登录Statcounter。 点击“项目”(Projects)页面上的“添加新项目”(Add New Project)。 在“添加页面”(Add Project)页面上填写网站网址和项目标题。 如有需要，调整其他的项目设置。 然后，点击“添加项目”(Add Project)按钮。 点击“完成平台检查”(Platform Check Complete)页面上的“继续默认安装”(Continue to Default Installation)按钮。 最终，在“在你的网站上插入代码”(Insert the Code on Your Website)页面，分别复制HTML代码片段中sc_project和sc_security变量的值 到主题配置中的plugins &gt; statcounter &gt; project和plugins &gt; statcounter &gt; security中。 例如，下面的Statcounter代码： Statcounter code12345678910&lt;script type=&quot;text/javascript&quot;&gt;var sc_project=12345678; var sc_invisible=1; var sc_security=&quot;abcdef12&quot;; var sc_https=1; &lt;/script&gt;&lt;script type=&quot;text/javascript&quot;src=&quot;https://www.statcounter.com/counter/counter.js&quot;async&gt;&lt;/script&gt;... 对应的主题配置为： _config.icarus.yml1234plugins: statcounter: project: 12345678 security: abcdef12 Twitter转化跟踪安装指南 按照如何设置转化跟踪启用Twitter转化追踪的通用网站标签(Universal website tag)。 在你的转化追踪代码中找到init (Pixel ID)。复制它的值到主题配置中的plugins &gt; twitter_conversion_tracking &gt; pixel_id。 例如，如下的Twitter追踪转化代码： Twitter追踪转化代码1234567891011&lt;!-- Twitter universal website tag code --&gt;&lt;script&gt;!function(e,n,u,a){e.twq||(a=e.twq=function(){a.exe?a.exe.apply(a,arguments):a.queue.push(arguments);},a.version='1',a.queue=[],t=n.createElement(u),t.async=!0,t.src='//static.ads-twitter.com/uwt.js',s=n.getElementsByTagName(u)[0],s.parentNode.insertBefore(t,s))}(window,document,'script');// Insert Twitter Pixel ID and Standard Event data belowtwq('init','abcdef');twq('track','PageView');&lt;/script&gt;&lt;!-- End Twitter universal website tag code --&gt; 对应的主题配置为： _config.icarus.yml123plugins: twitter_conversion_tracking: pixel_id: abcdef 文章内容有误？请点击此处提交修改。","link":"/Plugins/Analytics/icarus%E7%94%A8%E6%88%B7%E6%8C%87%E5%8D%97-%E7%BD%91%E7%AB%99%E5%88%86%E6%9E%90%E6%8F%92%E4%BB%B6/"},{"title":"Icarus用户指南 - 挂件","text":"本文介绍Icarus 5支持的页面挂件的安装配置。 若要同时展示多个挂件，只需在主题配置的widgets数组中添加多个挂件配置。 它们会按照定义的顺序出现。 每个挂件必须包含type(挂件类型)与position(挂件展示位置)设置项。 示例如下： _config.icarus.yml123456789widgets: - type: ... # 挂件1 position: left ... - type: ... # 挂件2 position: right ... 本文同时提供以下语言的翻译：English。 下面的挂件由ppoffice/hexo-component-inferno提供，完整的支持挂件列表和配置详情以其为准。 作者资料卡你可以启用作者资料卡挂件来展示文章作者/网站站长的信息。 资料卡的配置如下所示： _config.icarus.yml123456789101112131415161718192021222324widgets: - position: right type: profile # 作者名称 author: hulatocat # 作者头衔 author_title: A GitHub Octocat # 作者所在地/公司 location: GitHub Inc. # 头像图片地址 avatar: https://octodex.github.com/images/hula_loop_octodex03.gif # 是否显示圆形头像 avatar_rounded: false # Gravatar邮箱(如不设置`avatar`项) gravatar: # 关注按钮链接地址 follow_link: 'https://octodex.github.com/hulatocat' # 社交媒体链接 social_links: Github: icon: fab fa-github url: 'https://github.com/' Icarus: 'https://github.com/ppoffice/hexo-theme-icarus' 需要注意的是： 如果你希望使用Gravatar而不是avatar配置项作为头像图片，请在gravatar项填入 你的Gravatar邮箱地址并在avatar一项中留空； social_links可以采用如下两种格式： 图标形式： social_links123&lt;链接名称&gt;: icon: &lt;FontAwesome5_图标的_HTML_class名称&gt; url: &lt;链接的URL地址&gt; 文字形式： social_links1&lt;链接名称&gt;: &lt;链接的URL地址&gt; 文章目录若要展示文章目录，请在主题配置中添加如下挂件配置： _config.icarus.yml123456widgets: - type: toc position: left # 是否显示目录项目的序号 index: true 然后，在需要开启目录的文章头部加入toc: true： Post.md1234title: 一篇有目录的文章toc: true---文章内容... 友站链接你可以使用友站链接挂件来展示外部网站的列表。 示例配置如下所示： _config.icarus.yml12345678widgets: - position: left type: links # 友站名称与链接 links: Hexo: 'https://hexo.io' Bulma: 'https://bulma.io' 最新文章使用如下挂件配置来开启最新文章挂件： _config.icarus.yml1234widgets: - position: right type: recent_posts 文章归档使用如下挂件配置来开启文章归档挂件： _config.icarus.yml1234widgets: - position: right type: archives 文章分类使用如下挂件配置来开启文章分类挂件： _config.icarus.yml1234widgets: - position: right type: categories 文章标签使用如下挂件配置来开启文章标签挂件： _config.icarus.yml1234567widgets: - position: right type: tags order_by: name # 可选项。按名称(name)或长度(length)来排序。加上`-`前缀来倒序排列。 amount: 20 # 可选项。最多显示的标签数量。留空以显示所有标签。 show_count: true # 可选项。是否显示标签名称右侧的文章数量。 Google Feedburner Google即将关闭Feedburner的邮件订阅功能。 你可以切换到follow.it挂件或者其他邮件订阅服务。 按照如下步骤即可启用Google Feedburner插件： 首先，使用诸如hexo-generator-feed此类的Hexo插件生成 你的Hexo网站的RSS源。 然后登录Google Feedburner，在输入框内输入你的RSS地址并点击“下一步”(Next) 来添加你的RSS源。 然后，在下一页中填写“源标题”。 点击“下一步”(Next)来继续自定义你的源，或者点击“直接跳到源管理”(Skip directly to feed management)来完成配置。 完成添加源后，点击网页顶部的”我的源“(My Feeds)链接。 点击“我的源”(My Feeds)页面上新添加的源。 切换到”宣传“(Publicize)标签页并点击页面左侧的”邮件订阅“(Email Subscription)链接。 点击“激活”(Activate)按钮来开启“邮件订阅”(Email Subscription)功能。 在”邮件订阅“(Email Subscription)页面上从HTML代码中找到如下信息： Google Feedburner URL1https://feedburner.google.com/fb/a/mailverify?uri=****** 复制uri=后的ID(如feedforall/ABCD)到挂件配置的feedburner_id设置中： _config.icarus.yml1234567widgets: - position: left type: subscribe_email # (可选) 描述文字 description: 邮件订阅，更新早知道 feedburner_id: feedforall/ABCD Google AdSense在Google AdSense上新建广告。 然后，复制广告HTML代码中的data-ad-client和data-ad-slot值分别填入到挂件配置的client_id和slot_id项中。 示例如下： _config.icarus.yml123456widgets: - position: left type: adsense client_id: ca-pub-xxxxxxxx slot_id: xxxxxxx follow.it按照如下步骤即可启用follow.it邮件订阅插件： 首先，使用诸如hexo-generator-feed此类的Hexo插件生成 你的Hexo网站的RSS源。 访问follow.it并在“向你的站点添加关注功能”(Add the follow feature to your site)下方的 输入框中填写RSS源的文件地址，例如http://example.com/atom.xml。 然后，点击“下一步”(Next)。 点击“定义关注表单设计”(Define the follow form’s design)页面上的“继续”(Continue)按钮。 搜索action=并复制action=后双引号中的链接。 把你复制的action链接粘贴到挂件配置中的action_url设置项。 在那之后，点击“完成”(Done)。 _config.icarus.yml1234567widgets: - position: left type: followit description: action_url: https://api.follow.it/****** verification_code: '' 点击“继续”(Continue)按钮或者“跳过此步”(Skip this)链接来跳过“选择你想要的关注按钮”(Pick the Follow icons you want)和 ”显示弹窗来最大化交流“(Show a pop-up for maximum conversion)页面。 在”连接你的源到follow.it账户“(Connect your feed to a follow.it account)页面上，在输入框中填入你将要用来注册follow.it账户 和管理订阅者的邮箱地址。 然后，点击”开始“(Start)。 你会收到一封来自follow.it的邮件。 在那封邮件中搜索&lt;meta name=&quot;follow_it-verification-code&quot; content=&quot;******&quot;/&gt;并复制content=后双引号中的content的值。 将你复制的值粘贴到挂件设置中的verification_code设置项。 _config.icarus.yml1234567widgets: - position: left type: followit description: action_url: https://api.follow.it/****** verification_code: ****** 生成你的站点并将其上传到你的服务器。 回到follow.it并用你的邮箱地址注册一个账户。 回到你收到的第一封邮件并点击”点击这里来认领“(Click here to claim it)链接来认领你的订阅源。 文章内容有误？请点击此处提交修改。","link":"/Widgets/icarus%E7%94%A8%E6%88%B7%E6%8C%87%E5%8D%97-%E6%8C%82%E4%BB%B6/"},{"title":"代码随想录算法训练营第三天|链表Part01","text":"周日补。","link":"/%E6%84%9F%E6%82%9F/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95%E7%AE%97%E6%B3%95%E8%AE%AD%E7%BB%83%E8%90%A5%E7%AC%AC%E4%B8%89%E5%A4%A9-%E9%93%BE%E8%A1%A8part01/"},{"title":"AddThis Share Buttons","text":"This page is for demonstration only. Please report your issues with this plugin to ppoffice/hexo-component-inferno. Please turn off your ad blockers if you do not see the buttons.","link":"/uncategorized/addthis-share-buttons/"},{"title":"AddToAny Share Buttons","text":"This page is for demonstration only. Please report your issues with this plugin to ppoffice/hexo-component-inferno.","link":"/uncategorized/addtoany-share-buttons/"},{"title":"Algolia Search Plugin","text":"This page is for demonstration only. Please report your issues with this plugin to ppoffice/hexo-component-inferno.","link":"/uncategorized/algolia-search-plugin/"},{"title":"ShareThis Share Buttons","text":"This page is for demonstration only. Please report your issues with this plugin to ppoffice/hexo-component-inferno.","link":"/uncategorized/sharethis-share-buttons/"},{"title":"Google CSE Search Plugin","text":"This page is for demonstration only. Please report your issues with this plugin to ppoffice/hexo-component-inferno.","link":"/uncategorized/google-cse-search-plugin/"},{"title":"Facebook Comment Plugin","text":"This page is for demonstration only. Please report your issues with this plugin to ppoffice/hexo-component-inferno. Please turn off your ad blockers if you do not see the comment section.","link":"/uncategorized/facebook-comment-plugin/"},{"title":"Share.js Share Buttons","text":"This page is for demonstration only. Please report your issues with this plugin to ppoffice/hexo-component-inferno.","link":"/uncategorized/share-js-share-buttons/"},{"title":"DisqusJS Comment Plugin","text":"This page is for demonstration only. Please report your issues with this plugin to ppoffice/hexo-component-inferno.","link":"/uncategorized/disqusjs-comment-plugin/"},{"title":"Giscus Comment Plugin","text":"This page is for demonstration only. Please report your issues with this plugin to ppoffice/hexo-component-inferno.","link":"/uncategorized/giscus-comment-plugin/"},{"title":"Gitalk Comment Plugin","text":"This page is for demonstration only. Please report your issues with this plugin to ppoffice/hexo-component-inferno.","link":"/uncategorized/gitalk-comment-plugin/"},{"title":"Twikoo Comment Plugin","text":"This page is for demonstration only. Please report your issues with this plugin to ppoffice/hexo-component-inferno.","link":"/uncategorized/twikoo-comment-plugin/"},{"title":"Utterances Comment Plugin","text":"This page is for demonstration only. Please report your issues with this plugin to ppoffice/hexo-component-inferno.","link":"/uncategorized/utterances-comment-plugin/"},{"title":"Valine Comment Plugin","text":"This page is for demonstration only. Please report your issues with this plugin to ppoffice/hexo-component-inferno. A vulnerability has been found in Valine that the comment service exposes IP addresses of all commenters (xCss/Valine#336). Please use alternative comment services until this issue has been fixed.","link":"/uncategorized/valine-comment-plugin/"},{"title":"Disqus Comment Plugin","text":"This page is for demonstration only. Please report your issues with this plugin to ppoffice/hexo-component-inferno.","link":"/uncategorized/disqus-comment-plugin/"},{"title":"Waline Comment Plugin","text":"This page is for demonstration only. Please report your issues with this plugin to ppoffice/hexo-component-inferno.","link":"/uncategorized/waline-comment-plugin/"}],"tags":[{"name":"Demo","slug":"Demo","link":"/tags/Demo/"},{"name":"Icarus用户指南","slug":"Icarus用户指南","link":"/tags/Icarus%E7%94%A8%E6%88%B7%E6%8C%87%E5%8D%97/"},{"name":"JavaScript","slug":"JavaScript","link":"/tags/JavaScript/"},{"name":"算法","slug":"算法","link":"/tags/%E7%AE%97%E6%B3%95/"},{"name":"DFS","slug":"DFS","link":"/tags/DFS/"},{"name":"记忆化搜索","slug":"记忆化搜索","link":"/tags/%E8%AE%B0%E5%BF%86%E5%8C%96%E6%90%9C%E7%B4%A2/"},{"name":"动态规划","slug":"动态规划","link":"/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"},{"name":"二分查找","slug":"二分查找","link":"/tags/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/"},{"name":"滑动窗口","slug":"滑动窗口","link":"/tags/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3/"},{"name":"Node.js","slug":"Node-js","link":"/tags/Node-js/"},{"name":"前缀和","slug":"前缀和","link":"/tags/%E5%89%8D%E7%BC%80%E5%92%8C/"},{"name":"回溯算法","slug":"回溯算法","link":"/tags/%E5%9B%9E%E6%BA%AF%E7%AE%97%E6%B3%95/"},{"name":"Getting Started","slug":"Getting-Started","link":"/tags/Getting-Started/"}],"categories":[{"name":"算法随想录","slug":"算法随想录","link":"/categories/%E7%AE%97%E6%B3%95%E9%9A%8F%E6%83%B3%E5%BD%95/"},{"name":"Configuration","slug":"Configuration","link":"/categories/Configuration/"},{"name":"Plugins","slug":"Plugins","link":"/categories/Plugins/"},{"name":"Comment","slug":"Plugins/Comment","link":"/categories/Plugins/Comment/"},{"name":"Other","slug":"Plugins/Other","link":"/categories/Plugins/Other/"},{"name":"Donation","slug":"Plugins/Donation","link":"/categories/Plugins/Donation/"},{"name":"Search","slug":"Plugins/Search","link":"/categories/Plugins/Search/"},{"name":"Share","slug":"Plugins/Share","link":"/categories/Plugins/Share/"},{"name":"Analytics","slug":"Plugins/Analytics","link":"/categories/Plugins/Analytics/"},{"name":"Widgets","slug":"Widgets","link":"/categories/Widgets/"},{"name":"感悟","slug":"感悟","link":"/categories/%E6%84%9F%E6%82%9F/"}],"pages":[{"title":"","text":"A simple, delicate, and modern theme for the static site generator Hexo. Preview | Documentation | Discuss on GitHub :cd: Installation12$ npm install hexo-theme-icarus$ hexo config theme icarus Please refer to Getting Started with Icarus for more details. :gift: FeaturesCyberpunk Theme VariantTap into the future cyber world with the newly added Cyberpunk theme variant. Inspired by Cyberpunk 2077. Extensive Plugin SupportIcarus includes plentiful search, comment, sharing and other plugins out of the box that makes your blog feature-rich and powerful. Comment Changyan &middot; Disqus &middot; DisqusJS &middot; Facebook &middot; Gitalk &middot; Gitment &middot; Isso &middot; LiveRe &middot; Utterance &middot; Valine Donate Button Afdian.net &middot; Alipay &middot; Buy me a coffee &middot; Patreon &middot; Paypal &middot; Wecat Search Algolia &middot; Baidu &middot; Google CSE &middot; Insight Share AddThis &middot; AddToAny &middot; Baidu Share &middot; Share.js &middot; ShareThis Widgets Google Adsense &middot; Archives &middot; Categories &middot; External Site Links &middot; Recent Posts &middot; Google Feedburner &middot; Tags &middot; Table of Contents Analytics Baidu Statistics &middot; Bing Webmaster &middot; BuSuanZi Web Counter &middot; CNZZ Statistics &middot; Google Analytics &middot; Hotjar &middot; StatCounter &middot; Twitter Conversion Tracking Other Plugins Cookie Consent &middot; LightGallery &middot; Justified Gallery &middot; KaTeX &middot; MathJax &middot; Oudated Browser &middot; Page Loading Animations Colorful Code HighlightIcarus directly import stylesheets from the highlight.js package and makes more than 90 code highlight themes available to you. Atom One Light Monokai Kimbie Dark Flexible Theme ConfigurationIcarus allows you to configure your site on a per-page or per-layout basis. _config.icarus.yml12345widgets: - type: profile position: left - type: recent_posts position: right post.md12345widgets: - type: profile position: left - type: recent_posts position: left _config.page.yml1widgets: null Responsive LayoutGive your audiences best viewing experience with Icarus’s mobile-friendly responsive layout. :hammer: DevelopmentThis project is built with Hexo Inferno.js Stylus Bulma Please refer to the documentation and contributing guide for implementation details. :tada: ContributeIf you feel like to help us build a better Icarus, you can :black_nib: Submit a tutorial | :earth_asia: Add a translation | :triangular_flag_on_post: Report a bug | :electric_plug: Suggest a new feature :memo: LicenseThis project is licensed under the MIT License - see the LICENSE file for details.","link":"/about/index.html"}]}